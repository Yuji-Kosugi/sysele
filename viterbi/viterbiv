#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x189dc00 .scope module, "viterbisim" "viterbisim" 2 1;
 .timescale 0 0;
v0x19735e0_0 .var "CLK", 0 0;
v0x1973660_0 .var "RST", 0 0;
v0x19736e0_0 .net *"_s10", 0 0, C4<0>; 1 drivers
v0x1973760_0 .net *"_s102", 0 0, C4<1>; 1 drivers
v0x1973810_0 .net *"_s106", 0 0, C4<0>; 1 drivers
v0x1973890_0 .net *"_s110", 0 0, C4<0>; 1 drivers
v0x1973910_0 .net *"_s114", 0 0, C4<1>; 1 drivers
v0x1973990_0 .net *"_s118", 0 0, C4<0>; 1 drivers
v0x1973a10_0 .net *"_s122", 0 0, C4<0>; 1 drivers
v0x1973a90_0 .net *"_s126", 0 0, C4<1>; 1 drivers
v0x1973b10_0 .net *"_s130", 0 0, C4<0>; 1 drivers
v0x1973bb0_0 .net *"_s134", 0 0, C4<0>; 1 drivers
v0x1973c50_0 .net *"_s138", 0 0, C4<1>; 1 drivers
v0x1973cf0_0 .net *"_s14", 0 0, C4<0>; 1 drivers
v0x1973e10_0 .net *"_s142", 0 0, C4<0>; 1 drivers
v0x1973eb0_0 .net *"_s146", 0 0, C4<0>; 1 drivers
v0x1973d70_0 .net *"_s150", 0 0, C4<1>; 1 drivers
v0x1974000_0 .net *"_s154", 0 0, C4<0>; 1 drivers
v0x1974120_0 .net *"_s158", 0 0, C4<0>; 1 drivers
v0x19741a0_0 .net *"_s162", 0 0, C4<1>; 1 drivers
v0x1974080_0 .net *"_s166", 0 0, C4<0>; 1 drivers
v0x19742d0_0 .net *"_s170", 0 0, C4<0>; 1 drivers
v0x1974220_0 .net *"_s174", 0 0, C4<1>; 1 drivers
v0x1974410_0 .net *"_s178", 0 0, C4<0>; 1 drivers
v0x1974370_0 .net *"_s18", 0 0, C4<1>; 1 drivers
v0x1974560_0 .net *"_s182", 0 0, C4<0>; 1 drivers
v0x19744b0_0 .net *"_s186", 0 0, C4<1>; 1 drivers
v0x19746c0_0 .net *"_s190", 0 0, C4<0>; 1 drivers
v0x1974600_0 .net *"_s194", 0 0, C4<0>; 1 drivers
v0x1974830_0 .net *"_s198", 0 0, C4<1>; 1 drivers
v0x1974740_0 .net *"_s2", 0 0, C4<0>; 1 drivers
v0x19749b0_0 .net *"_s202", 0 0, C4<0>; 1 drivers
v0x19748b0_0 .net *"_s206", 0 0, C4<0>; 1 drivers
v0x1974b40_0 .net *"_s210", 0 0, C4<1>; 1 drivers
v0x1974a30_0 .net *"_s214", 0 0, C4<0>; 1 drivers
v0x1974ce0_0 .net *"_s218", 0 0, C4<0>; 1 drivers
v0x1974bc0_0 .net *"_s22", 0 0, C4<0>; 1 drivers
v0x1974c60_0 .net *"_s222", 0 0, C4<0>; 1 drivers
v0x1974ea0_0 .net *"_s226", 0 0, C4<1>; 1 drivers
v0x1974f20_0 .net *"_s230", 0 0, C4<0>; 1 drivers
v0x1974d60_0 .net *"_s234", 0 0, C4<0>; 1 drivers
v0x1974e00_0 .net *"_s238", 0 0, C4<1>; 1 drivers
v0x1975100_0 .net *"_s242", 0 0, C4<0>; 1 drivers
v0x1975180_0 .net *"_s246", 0 0, C4<0>; 1 drivers
v0x1974fa0_0 .net *"_s250", 0 0, C4<1>; 1 drivers
v0x1975040_0 .net *"_s254", 0 0, C4<0>; 1 drivers
v0x1975380_0 .net *"_s258", 0 0, C4<0>; 1 drivers
v0x1975400_0 .net *"_s26", 0 0, C4<0>; 1 drivers
v0x1975200_0 .net *"_s30", 0 0, C4<1>; 1 drivers
v0x1975280_0 .net *"_s34", 0 0, C4<0>; 1 drivers
v0x1975620_0 .net *"_s38", 0 0, C4<0>; 1 drivers
v0x19756a0_0 .net *"_s42", 0 0, C4<1>; 1 drivers
v0x1975480_0 .net *"_s46", 0 0, C4<0>; 1 drivers
v0x1975520_0 .net *"_s50", 0 0, C4<0>; 1 drivers
v0x19758e0_0 .net *"_s54", 0 0, C4<1>; 1 drivers
v0x1975960_0 .net *"_s58", 0 0, C4<0>; 1 drivers
v0x1975720_0 .net *"_s6", 0 0, C4<1>; 1 drivers
v0x19757c0_0 .net *"_s62", 0 0, C4<0>; 1 drivers
v0x1975860_0 .net *"_s66", 0 0, C4<1>; 1 drivers
v0x1975bc0_0 .net *"_s70", 0 0, C4<0>; 1 drivers
v0x19759e0_0 .net *"_s74", 0 0, C4<0>; 1 drivers
v0x1975a80_0 .net *"_s78", 0 0, C4<1>; 1 drivers
v0x1975b20_0 .net *"_s82", 0 0, C4<0>; 1 drivers
v0x1975e40_0 .net *"_s86", 0 0, C4<0>; 1 drivers
v0x1975c40_0 .net *"_s90", 0 0, C4<1>; 1 drivers
v0x1975ce0_0 .net *"_s94", 0 0, C4<0>; 1 drivers
v0x1975d80_0 .net *"_s98", 0 0, C4<0>; 1 drivers
RS_0x7f96f0f8c1d8/0/0 .resolv tri, L_0x1978830, L_0x19782d0, L_0x1978ab0, L_0x1978920;
RS_0x7f96f0f8c1d8/0/4 .resolv tri, L_0x1978d70, L_0x1978be0, L_0x1979040, L_0x1978ea0;
RS_0x7f96f0f8c1d8/0/8 .resolv tri, L_0x1979360, L_0x1979170, L_0x19795e0, L_0x1979490;
RS_0x7f96f0f8c1d8/0/12 .resolv tri, L_0x1979860, L_0x1979710, L_0x1979b70, L_0x1979990;
RS_0x7f96f0f8c1d8/0/16 .resolv tri, L_0x1979fd0, L_0x1979ca0, L_0x197a290, L_0x197a0c0;
RS_0x7f96f0f8c1d8/0/20 .resolv tri, L_0x197a1b0, L_0x197a380, L_0x197a4b0, L_0x197a5c0;
RS_0x7f96f0f8c1d8/0/24 .resolv tri, L_0x197a6f0, L_0x197a860, L_0x197a990, L_0x197aae0;
RS_0x7f96f0f8c1d8/0/28 .resolv tri, L_0x197ac10, L_0x197ad80, L_0x197ae70, L_0x197b040;
RS_0x7f96f0f8c1d8/0/32 .resolv tri, L_0x1979a80, L_0x1979ed0, L_0x1979dc0, L_0x197b2c0;
RS_0x7f96f0f8c1d8/0/36 .resolv tri, L_0x197b3a0, L_0x197ba50, L_0x197baf0, L_0x197b880;
RS_0x7f96f0f8c1d8/0/40 .resolv tri, L_0x197b9b0, L_0x197b170, L_0x197bfc0, L_0x197bdd0;
RS_0x7f96f0f8c1d8/0/44 .resolv tri, L_0x197bec0, L_0x197bc30, L_0x197c480, L_0x197c270;
RS_0x7f96f0f8c1d8/0/48 .resolv tri, L_0x197c3a0, L_0x197c0b0, L_0x197c9d0, L_0x197c7a0;
RS_0x7f96f0f8c1d8/0/52 .resolv tri, L_0x197c890, L_0x197c570, L_0x197c610, L_0x197cf20;
RS_0x7f96f0f8c1d8/0/56 .resolv tri, L_0x197ca70, L_0x197ccc0, L_0x197d230, L_0x197d360;
RS_0x7f96f0f8c1d8/0/60 .resolv tri, L_0x197cdb0, L_0x197d690, L_0x197cfc0, L_0x197d0f0;
RS_0x7f96f0f8c1d8/0/64 .resolv tri, L_0x197b6e0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x7f96f0f8c1d8/1/0 .resolv tri, RS_0x7f96f0f8c1d8/0/0, RS_0x7f96f0f8c1d8/0/4, RS_0x7f96f0f8c1d8/0/8, RS_0x7f96f0f8c1d8/0/12;
RS_0x7f96f0f8c1d8/1/4 .resolv tri, RS_0x7f96f0f8c1d8/0/16, RS_0x7f96f0f8c1d8/0/20, RS_0x7f96f0f8c1d8/0/24, RS_0x7f96f0f8c1d8/0/28;
RS_0x7f96f0f8c1d8/1/8 .resolv tri, RS_0x7f96f0f8c1d8/0/32, RS_0x7f96f0f8c1d8/0/36, RS_0x7f96f0f8c1d8/0/40, RS_0x7f96f0f8c1d8/0/44;
RS_0x7f96f0f8c1d8/1/12 .resolv tri, RS_0x7f96f0f8c1d8/0/48, RS_0x7f96f0f8c1d8/0/52, RS_0x7f96f0f8c1d8/0/56, RS_0x7f96f0f8c1d8/0/60;
RS_0x7f96f0f8c1d8/1/16 .resolv tri, RS_0x7f96f0f8c1d8/0/64, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x7f96f0f8c1d8/2/0 .resolv tri, RS_0x7f96f0f8c1d8/1/0, RS_0x7f96f0f8c1d8/1/4, RS_0x7f96f0f8c1d8/1/8, RS_0x7f96f0f8c1d8/1/12;
RS_0x7f96f0f8c1d8/2/4 .resolv tri, RS_0x7f96f0f8c1d8/1/16, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x7f96f0f8c1d8 .resolv tri, RS_0x7f96f0f8c1d8/2/0, RS_0x7f96f0f8c1d8/2/4, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x19760e0_0 .net8/s "data", 63 0, RS_0x7f96f0f8c1d8; 65 drivers
v0x1975ec0_0 .net "data_d", 0 0, L_0x1978650; 1 drivers
v0x1975f70_0 .net "data_e", 1 0, v0x1973430_0; 1 drivers
v0x1975ff0_0 .var "data_i", 0 0;
v0x19763a0_0 .var/i "error", 31 0;
v0x1976160_0 .var/i "i", 31 0;
v0x19761e0_0 .net "valid_d", 0 0, L_0x1978120; 1 drivers
v0x1976290_0 .net "valid_e", 0 0, v0x1973530_0; 1 drivers
v0x1976680_0 .var "valid_i", 0 0;
L_0x1978830 .part/pv C4<0>, 0, 1, 64;
L_0x19782d0 .part/pv C4<1>, 1, 1, 64;
L_0x1978ab0 .part/pv C4<0>, 2, 1, 64;
L_0x1978920 .part/pv C4<0>, 3, 1, 64;
L_0x1978d70 .part/pv C4<1>, 4, 1, 64;
L_0x1978be0 .part/pv C4<0>, 5, 1, 64;
L_0x1979040 .part/pv C4<0>, 6, 1, 64;
L_0x1978ea0 .part/pv C4<1>, 7, 1, 64;
L_0x1979360 .part/pv C4<0>, 8, 1, 64;
L_0x1979170 .part/pv C4<0>, 9, 1, 64;
L_0x19795e0 .part/pv C4<1>, 10, 1, 64;
L_0x1979490 .part/pv C4<0>, 11, 1, 64;
L_0x1979860 .part/pv C4<0>, 12, 1, 64;
L_0x1979710 .part/pv C4<1>, 13, 1, 64;
L_0x1979b70 .part/pv C4<0>, 14, 1, 64;
L_0x1979990 .part/pv C4<0>, 15, 1, 64;
L_0x1979fd0 .part/pv C4<1>, 16, 1, 64;
L_0x1979ca0 .part/pv C4<0>, 17, 1, 64;
L_0x197a290 .part/pv C4<0>, 18, 1, 64;
L_0x197a0c0 .part/pv C4<1>, 19, 1, 64;
L_0x197a1b0 .part/pv C4<0>, 20, 1, 64;
L_0x197a380 .part/pv C4<0>, 21, 1, 64;
L_0x197a4b0 .part/pv C4<1>, 22, 1, 64;
L_0x197a5c0 .part/pv C4<0>, 23, 1, 64;
L_0x197a6f0 .part/pv C4<0>, 24, 1, 64;
L_0x197a860 .part/pv C4<1>, 25, 1, 64;
L_0x197a990 .part/pv C4<0>, 26, 1, 64;
L_0x197aae0 .part/pv C4<0>, 27, 1, 64;
L_0x197ac10 .part/pv C4<1>, 28, 1, 64;
L_0x197ad80 .part/pv C4<0>, 29, 1, 64;
L_0x197ae70 .part/pv C4<0>, 30, 1, 64;
L_0x197b040 .part/pv C4<1>, 31, 1, 64;
L_0x1979a80 .part/pv C4<0>, 32, 1, 64;
L_0x1979ed0 .part/pv C4<0>, 33, 1, 64;
L_0x1979dc0 .part/pv C4<1>, 34, 1, 64;
L_0x197b2c0 .part/pv C4<0>, 35, 1, 64;
L_0x197b3a0 .part/pv C4<0>, 36, 1, 64;
L_0x197ba50 .part/pv C4<1>, 37, 1, 64;
L_0x197baf0 .part/pv C4<0>, 38, 1, 64;
L_0x197b880 .part/pv C4<0>, 39, 1, 64;
L_0x197b9b0 .part/pv C4<1>, 40, 1, 64;
L_0x197b170 .part/pv C4<0>, 41, 1, 64;
L_0x197bfc0 .part/pv C4<0>, 42, 1, 64;
L_0x197bdd0 .part/pv C4<1>, 43, 1, 64;
L_0x197bec0 .part/pv C4<0>, 44, 1, 64;
L_0x197bc30 .part/pv C4<0>, 45, 1, 64;
L_0x197c480 .part/pv C4<1>, 46, 1, 64;
L_0x197c270 .part/pv C4<0>, 47, 1, 64;
L_0x197c3a0 .part/pv C4<0>, 48, 1, 64;
L_0x197c0b0 .part/pv C4<1>, 49, 1, 64;
L_0x197c9d0 .part/pv C4<0>, 50, 1, 64;
L_0x197c7a0 .part/pv C4<0>, 50, 1, 64;
L_0x197c890 .part/pv C4<1>, 51, 1, 64;
L_0x197c570 .part/pv C4<0>, 52, 1, 64;
L_0x197c610 .part/pv C4<0>, 53, 1, 64;
L_0x197cf20 .part/pv C4<0>, 54, 1, 64;
L_0x197ca70 .part/pv C4<1>, 55, 1, 64;
L_0x197ccc0 .part/pv C4<0>, 56, 1, 64;
L_0x197d230 .part/pv C4<0>, 57, 1, 64;
L_0x197d360 .part/pv C4<1>, 58, 1, 64;
L_0x197cdb0 .part/pv C4<0>, 59, 1, 64;
L_0x197d690 .part/pv C4<0>, 60, 1, 64;
L_0x197cfc0 .part/pv C4<1>, 61, 1, 64;
L_0x197d0f0 .part/pv C4<0>, 62, 1, 64;
L_0x197b6e0 .part/pv C4<0>, 63, 1, 64;
S_0x1973040 .scope module, "convolution" "convolution" 2 9, 3 1, S_0x189dc00;
 .timescale 0 0;
v0x1973130_0 .net "CLK", 0 0, v0x19735e0_0; 1 drivers
v0x19731b0_0 .net "RST", 0 0, v0x1973660_0; 1 drivers
v0x1973230_0 .var "count", 5 0;
v0x19732b0_0 .var "d1", 0 0;
v0x1973330_0 .var "d2", 0 0;
v0x19733b0_0 .net "data_i", 0 0, v0x1975ff0_0; 1 drivers
v0x1973430_0 .var "data_o", 1 0;
v0x19734b0_0 .net "valid_i", 0 0, v0x1976680_0; 1 drivers
v0x1973530_0 .var "valid_o", 0 0;
S_0x18dba40 .scope module, "viterbi" "viterbi" 2 10, 4 1, S_0x189dc00;
 .timescale 0 0;
L_0x1975320 .functor XNOR 1, v0x1973530_0, C4<1>, C4<0>, C4<0>;
L_0x1976570 .functor AND 1, L_0x1975320, L_0x1976420, C4<1>, C4<1>;
L_0x1976b50 .functor XNOR 1, v0x1973530_0, C4<1>, C4<0>, C4<0>;
L_0x1976e00 .functor AND 1, L_0x1976b50, L_0x1976cc0, C4<1>, C4<1>;
L_0x19771b0 .functor XNOR 1, v0x1973530_0, C4<1>, C4<0>, C4<0>;
L_0x19773a0 .functor AND 1, L_0x19771b0, L_0x1977300, C4<1>, C4<1>;
L_0x19772a0 .functor XNOR 1, v0x1973530_0, C4<1>, C4<0>, C4<0>;
L_0x1977a70 .functor AND 1, L_0x19772a0, L_0x1977940, C4<1>, C4<1>;
L_0x1977ec0 .functor OR 1, v0x1970490_0, v0x196f480_0, C4<0>, C4<0>;
L_0x1977fc0 .functor OR 1, L_0x1977ec0, v0x196e380_0, C4<0>, C4<0>;
L_0x1978120 .functor OR 1, L_0x1977fc0, v0x196d310_0, C4<0>, C4<0>;
L_0x1978220 .functor XNOR 1, v0x1970490_0, C4<1>, C4<0>, C4<0>;
L_0x19780c0 .functor XNOR 1, v0x196f480_0, C4<1>, C4<0>, C4<0>;
L_0x19764c0 .functor XNOR 1, v0x196e380_0, C4<1>, C4<0>, C4<0>;
v0x1970840_0 .alias "CLK", 0 0, v0x1973130_0;
v0x1970950_0 .alias "RST", 0 0, v0x19731b0_0;
v0x1970a60_0 .net *"_s0", 0 0, C4<1>; 1 drivers
v0x1970ae0_0 .net *"_s10", 0 0, C4<1>; 1 drivers
v0x1970b60_0 .net *"_s12", 0 0, C4<0>; 1 drivers
v0x1970be0_0 .net *"_s16", 0 0, C4<1>; 1 drivers
v0x1970c80_0 .net *"_s18", 0 0, L_0x1976b50; 1 drivers
v0x1970d20_0 .net *"_s2", 0 0, L_0x1975320; 1 drivers
v0x1970dc0_0 .net *"_s20", 1 0, C4<01>; 1 drivers
v0x1970e60_0 .net *"_s22", 0 0, L_0x1976cc0; 1 drivers
v0x1970f00_0 .net *"_s24", 0 0, L_0x1976e00; 1 drivers
v0x1970fa0_0 .net *"_s26", 0 0, C4<1>; 1 drivers
v0x1971040_0 .net *"_s28", 0 0, C4<0>; 1 drivers
v0x19710e0_0 .net *"_s32", 0 0, C4<1>; 1 drivers
v0x1971200_0 .net *"_s34", 0 0, L_0x19771b0; 1 drivers
v0x19712a0_0 .net *"_s36", 1 0, C4<10>; 1 drivers
v0x1971160_0 .net *"_s38", 0 0, L_0x1977300; 1 drivers
v0x19713f0_0 .net *"_s4", 1 0, C4<00>; 1 drivers
v0x1971510_0 .net *"_s40", 0 0, L_0x19773a0; 1 drivers
v0x1971590_0 .net *"_s42", 0 0, C4<1>; 1 drivers
v0x1971470_0 .net *"_s44", 0 0, C4<0>; 1 drivers
v0x19716c0_0 .net *"_s48", 0 0, C4<1>; 1 drivers
v0x1971610_0 .net *"_s50", 0 0, L_0x19772a0; 1 drivers
v0x1971800_0 .net *"_s52", 1 0, C4<11>; 1 drivers
v0x1971760_0 .net *"_s54", 0 0, L_0x1977940; 1 drivers
v0x1971950_0 .net *"_s56", 0 0, L_0x1977a70; 1 drivers
v0x19718a0_0 .net *"_s58", 0 0, C4<1>; 1 drivers
v0x1971ab0_0 .net *"_s6", 0 0, L_0x1976420; 1 drivers
v0x19719f0_0 .net *"_s60", 0 0, C4<0>; 1 drivers
v0x1971c20_0 .net *"_s64", 0 0, L_0x1977ec0; 1 drivers
v0x1971b30_0 .net *"_s66", 0 0, L_0x1977fc0; 1 drivers
v0x1971da0_0 .net *"_s70", 0 0, C4<1>; 1 drivers
v0x1971ca0_0 .net *"_s72", 0 0, L_0x1978220; 1 drivers
v0x1971f30_0 .net *"_s74", 0 0, C4<1>; 1 drivers
v0x1971e20_0 .net *"_s76", 0 0, L_0x19780c0; 1 drivers
v0x19720d0_0 .net *"_s78", 0 0, C4<1>; 1 drivers
v0x1971fb0_0 .net *"_s8", 0 0, L_0x1976570; 1 drivers
v0x1972050_0 .net *"_s80", 0 0, L_0x19764c0; 1 drivers
v0x1972290_0 .net *"_s82", 0 0, L_0x1978370; 1 drivers
v0x1972310_0 .net *"_s84", 0 0, L_0x19784b0; 1 drivers
v0x1972150_0 .var "count", 5 0;
v0x19721f0_0 .alias "data_i", 1 0, v0x1975f70_0;
v0x1972580_0 .alias "data_o", 0 0, v0x1975ec0_0;
v0x1972600_0 .net "data_o_0", 0 0, v0x196ff90_0; 1 drivers
v0x1972390_0 .net "data_o_1", 0 0, v0x196ef30_0; 1 drivers
v0x1972410_0 .net "data_o_2", 0 0, v0x196dec0_0; 1 drivers
v0x1972800_0 .net "data_o_3", 0 0, v0x196ccb0_0; 1 drivers
v0x1972880_0 .var "select", 1 0;
v0x1972680_0 .alias "valid_i", 0 0, v0x1976290_0;
v0x1972700_0 .net "valid_i_0", 0 0, L_0x1976970; 1 drivers
v0x1972aa0_0 .net "valid_i_1", 0 0, L_0x1976fd0; 1 drivers
v0x1972b20_0 .net "valid_i_2", 0 0, L_0x19775d0; 1 drivers
v0x1972900_0 .net "valid_i_3", 0 0, L_0x1977c90; 1 drivers
v0x19729b0_0 .alias "valid_o", 0 0, v0x19761e0_0;
v0x1972d60_0 .net "valid_o_0", 0 0, v0x1970490_0; 1 drivers
v0x1972de0_0 .net "valid_o_1", 0 0, v0x196f480_0; 1 drivers
v0x1972ba0_0 .net "valid_o_2", 0 0, v0x196e380_0; 1 drivers
v0x1972c50_0 .net "valid_o_3", 0 0, v0x196d310_0; 1 drivers
L_0x1976420 .cmp/eq 2, v0x1972880_0, C4<00>;
L_0x1976970 .functor MUXZ 1, C4<0>, C4<1>, L_0x1976570, C4<>;
L_0x1976cc0 .cmp/eq 2, v0x1972880_0, C4<01>;
L_0x1976fd0 .functor MUXZ 1, C4<0>, C4<1>, L_0x1976e00, C4<>;
L_0x1977300 .cmp/eq 2, v0x1972880_0, C4<10>;
L_0x19775d0 .functor MUXZ 1, C4<0>, C4<1>, L_0x19773a0, C4<>;
L_0x1977940 .cmp/eq 2, v0x1972880_0, C4<11>;
L_0x1977c90 .functor MUXZ 1, C4<0>, C4<1>, L_0x1977a70, C4<>;
L_0x1978370 .functor MUXZ 1, v0x196ccb0_0, v0x196dec0_0, L_0x19764c0, C4<>;
L_0x19784b0 .functor MUXZ 1, L_0x1978370, v0x196ef30_0, L_0x19780c0, C4<>;
L_0x1978650 .functor MUXZ 1, L_0x19784b0, v0x196ff90_0, L_0x1978220, C4<>;
S_0x196f830 .scope module, "execute0" "execute" 4 34, 4 40, S_0x18dba40;
 .timescale 0 0;
v0x196fcd0_0 .alias "CLK", 0 0, v0x1973130_0;
v0x196fd70_0 .alias "RST", 0 0, v0x19731b0_0;
v0x196fdf0_0 .var "count", 31 0;
v0x196fe90_0 .var "data", 63 0;
v0x196ff10_0 .alias "data_i", 1 0, v0x1975f70_0;
v0x196ff90_0 .var "data_o", 0 0;
v0x1970030 .array "pre00", 63 0, 1 0;
v0x19700b0 .array "pre01", 63 0, 1 0;
v0x1970130 .array "pre10", 63 0, 1 0;
v0x19701b0 .array "pre11", 63 0, 1 0;
v0x1970230_0 .var "state", 1 0;
v0x19702d0_0 .var "sum00", 31 0;
v0x1970370_0 .var "sum01", 31 0;
v0x1970410_0 .var "sum10", 31 0;
v0x1970530_0 .var "sum11", 31 0;
v0x19705d0_0 .alias "valid_i", 0 0, v0x1972700_0;
v0x1970490_0 .var "valid_o", 0 0;
v0x1970720_0 .var "working", 0 0;
S_0x196f920 .scope function, "min" "min" 4 115, 4 115, S_0x196f830;
 .timescale 0 0;
v0x196fa10_0 .var "min", 1 0;
v0x196fa90_0 .var "sum00", 31 0;
v0x196fb10_0 .var "sum01", 31 0;
v0x196fbb0_0 .var "sum10", 31 0;
v0x196fc30_0 .var "sum11", 31 0;
TD_viterbisim.viterbi.execute0.min ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.0, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.2, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.3;
T_0.2 ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.4, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.5;
T_0.4 ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.6, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.7;
T_0.6 ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.8, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.9;
T_0.8 ;
    %load/v 8, v0x196fa90_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.10, 8;
    %set/v v0x196fa10_0, 0, 2;
    %jmp T_0.11;
T_0.10 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.12, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.13;
T_0.12 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.14, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.15;
T_0.14 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.16, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.17;
T_0.16 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.18, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.19;
T_0.18 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.20, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.21;
T_0.20 ;
    %load/v 8, v0x196fb10_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.22, 8;
    %movi 8, 1, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.23;
T_0.22 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.24, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.25;
T_0.24 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.26, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.27;
T_0.26 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.28, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.29;
T_0.28 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fc30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.30, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.31;
T_0.30 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.32, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.33;
T_0.32 ;
    %load/v 8, v0x196fbb0_0, 32;
    %load/v 40, v0x196fc30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fc30_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.34, 8;
    %movi 8, 2, 2;
    %set/v v0x196fa10_0, 8, 2;
    %jmp T_0.35;
T_0.34 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.36, 8;
    %set/v v0x196fa10_0, 1, 2;
    %jmp T_0.37;
T_0.36 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fa90_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.38, 8;
    %set/v v0x196fa10_0, 1, 2;
    %jmp T_0.39;
T_0.38 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.40, 8;
    %set/v v0x196fa10_0, 1, 2;
    %jmp T_0.41;
T_0.40 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fb10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fbb0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.42, 8;
    %set/v v0x196fa10_0, 1, 2;
    %jmp T_0.43;
T_0.42 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fa90_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.44, 8;
    %set/v v0x196fa10_0, 1, 2;
    %jmp T_0.45;
T_0.44 ;
    %load/v 8, v0x196fc30_0, 32;
    %load/v 40, v0x196fbb0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fbb0_0, 32;
    %load/v 41, v0x196fb10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196fb10_0, 32;
    %load/v 41, v0x196fa90_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_0.46, 8;
    %set/v v0x196fa10_0, 1, 2;
T_0.46 ;
T_0.45 ;
T_0.43 ;
T_0.41 ;
T_0.39 ;
T_0.37 ;
T_0.35 ;
T_0.33 ;
T_0.31 ;
T_0.29 ;
T_0.27 ;
T_0.25 ;
T_0.23 ;
T_0.21 ;
T_0.19 ;
T_0.17 ;
T_0.15 ;
T_0.13 ;
T_0.11 ;
T_0.9 ;
T_0.7 ;
T_0.5 ;
T_0.3 ;
T_0.1 ;
    %end;
S_0x196e730 .scope module, "execute1" "execute" 4 35, 4 40, S_0x18dba40;
 .timescale 0 0;
v0x196ebd0_0 .alias "CLK", 0 0, v0x1973130_0;
v0x196ec70_0 .alias "RST", 0 0, v0x19731b0_0;
v0x196ed40_0 .var "count", 31 0;
v0x196ede0_0 .var "data", 63 0;
v0x196ee60_0 .alias "data_i", 1 0, v0x1975f70_0;
v0x196ef30_0 .var "data_o", 0 0;
v0x196efd0 .array "pre00", 63 0, 1 0;
v0x196f050 .array "pre01", 63 0, 1 0;
v0x196f120 .array "pre10", 63 0, 1 0;
v0x196f1a0 .array "pre11", 63 0, 1 0;
v0x196f220_0 .var "state", 1 0;
v0x196f2c0_0 .var "sum00", 31 0;
v0x196f360_0 .var "sum01", 31 0;
v0x196f400_0 .var "sum10", 31 0;
v0x196f520_0 .var "sum11", 31 0;
v0x196f5c0_0 .alias "valid_i", 0 0, v0x1972aa0_0;
v0x196f480_0 .var "valid_o", 0 0;
v0x196f710_0 .var "working", 0 0;
S_0x196e820 .scope function, "min" "min" 4 115, 4 115, S_0x196e730;
 .timescale 0 0;
v0x196e910_0 .var "min", 1 0;
v0x196e990_0 .var "sum00", 31 0;
v0x196ea10_0 .var "sum01", 31 0;
v0x196eab0_0 .var "sum10", 31 0;
v0x196eb30_0 .var "sum11", 31 0;
TD_viterbisim.viterbi.execute1.min ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.48, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.49;
T_1.48 ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.50, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.51;
T_1.50 ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.52, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.53;
T_1.52 ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.54, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.55;
T_1.54 ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.56, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.57;
T_1.56 ;
    %load/v 8, v0x196e990_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.58, 8;
    %set/v v0x196e910_0, 0, 2;
    %jmp T_1.59;
T_1.58 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.60, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.61;
T_1.60 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.62, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.63;
T_1.62 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.64, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.65;
T_1.64 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.66, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.67;
T_1.66 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.68, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.69;
T_1.68 ;
    %load/v 8, v0x196ea10_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.70, 8;
    %movi 8, 1, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.71;
T_1.70 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.72, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.73;
T_1.72 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.74, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.75;
T_1.74 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.76, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.77;
T_1.76 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eb30_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.78, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.79;
T_1.78 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.80, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.81;
T_1.80 ;
    %load/v 8, v0x196eab0_0, 32;
    %load/v 40, v0x196eb30_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eb30_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.82, 8;
    %movi 8, 2, 2;
    %set/v v0x196e910_0, 8, 2;
    %jmp T_1.83;
T_1.82 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.84, 8;
    %set/v v0x196e910_0, 1, 2;
    %jmp T_1.85;
T_1.84 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196e990_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.86, 8;
    %set/v v0x196e910_0, 1, 2;
    %jmp T_1.87;
T_1.86 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.88, 8;
    %set/v v0x196e910_0, 1, 2;
    %jmp T_1.89;
T_1.88 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196ea10_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196eab0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.90, 8;
    %set/v v0x196e910_0, 1, 2;
    %jmp T_1.91;
T_1.90 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196e990_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.92, 8;
    %set/v v0x196e910_0, 1, 2;
    %jmp T_1.93;
T_1.92 ;
    %load/v 8, v0x196eb30_0, 32;
    %load/v 40, v0x196eab0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196eab0_0, 32;
    %load/v 41, v0x196ea10_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196ea10_0, 32;
    %load/v 41, v0x196e990_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_1.94, 8;
    %set/v v0x196e910_0, 1, 2;
T_1.94 ;
T_1.93 ;
T_1.91 ;
T_1.89 ;
T_1.87 ;
T_1.85 ;
T_1.83 ;
T_1.81 ;
T_1.79 ;
T_1.77 ;
T_1.75 ;
T_1.73 ;
T_1.71 ;
T_1.69 ;
T_1.67 ;
T_1.65 ;
T_1.63 ;
T_1.61 ;
T_1.59 ;
T_1.57 ;
T_1.55 ;
T_1.53 ;
T_1.51 ;
T_1.49 ;
    %end;
S_0x196d6c0 .scope module, "execute2" "execute" 4 36, 4 40, S_0x18dba40;
 .timescale 0 0;
v0x196db60_0 .alias "CLK", 0 0, v0x1973130_0;
v0x196dc30_0 .alias "RST", 0 0, v0x19731b0_0;
v0x196dce0_0 .var "count", 31 0;
v0x196dd60_0 .var "data", 63 0;
v0x196de10_0 .alias "data_i", 1 0, v0x1975f70_0;
v0x196dec0_0 .var "data_o", 0 0;
v0x196df40 .array "pre00", 63 0, 1 0;
v0x196dfc0 .array "pre01", 63 0, 1 0;
v0x196e040 .array "pre10", 63 0, 1 0;
v0x196e0c0 .array "pre11", 63 0, 1 0;
v0x196e140_0 .var "state", 1 0;
v0x196e1c0_0 .var "sum00", 31 0;
v0x196e260_0 .var "sum01", 31 0;
v0x196e300_0 .var "sum10", 31 0;
v0x196e420_0 .var "sum11", 31 0;
v0x196e4c0_0 .alias "valid_i", 0 0, v0x1972b20_0;
v0x196e380_0 .var "valid_o", 0 0;
v0x196e610_0 .var "working", 0 0;
S_0x196d7b0 .scope function, "min" "min" 4 115, 4 115, S_0x196d6c0;
 .timescale 0 0;
v0x196d8a0_0 .var "min", 1 0;
v0x196d920_0 .var "sum00", 31 0;
v0x196d9a0_0 .var "sum01", 31 0;
v0x196da40_0 .var "sum10", 31 0;
v0x196dac0_0 .var "sum11", 31 0;
TD_viterbisim.viterbi.execute2.min ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.96, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.97;
T_2.96 ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.98, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.99;
T_2.98 ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.100, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.101;
T_2.100 ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.102, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.103;
T_2.102 ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.104, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.105;
T_2.104 ;
    %load/v 8, v0x196d920_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.106, 8;
    %set/v v0x196d8a0_0, 0, 2;
    %jmp T_2.107;
T_2.106 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.108, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.109;
T_2.108 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.110, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.111;
T_2.110 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.112, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.113;
T_2.112 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.114, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.115;
T_2.114 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.116, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.117;
T_2.116 ;
    %load/v 8, v0x196d9a0_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.118, 8;
    %movi 8, 1, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.119;
T_2.118 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.120, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.121;
T_2.120 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.122, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.123;
T_2.122 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.124, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.125;
T_2.124 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196dac0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.126, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.127;
T_2.126 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.128, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.129;
T_2.128 ;
    %load/v 8, v0x196da40_0, 32;
    %load/v 40, v0x196dac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dac0_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.130, 8;
    %movi 8, 2, 2;
    %set/v v0x196d8a0_0, 8, 2;
    %jmp T_2.131;
T_2.130 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.132, 8;
    %set/v v0x196d8a0_0, 1, 2;
    %jmp T_2.133;
T_2.132 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196d920_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.134, 8;
    %set/v v0x196d8a0_0, 1, 2;
    %jmp T_2.135;
T_2.134 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.136, 8;
    %set/v v0x196d8a0_0, 1, 2;
    %jmp T_2.137;
T_2.136 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196d9a0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196da40_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.138, 8;
    %set/v v0x196d8a0_0, 1, 2;
    %jmp T_2.139;
T_2.138 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d920_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.140, 8;
    %set/v v0x196d8a0_0, 1, 2;
    %jmp T_2.141;
T_2.140 ;
    %load/v 8, v0x196dac0_0, 32;
    %load/v 40, v0x196da40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196da40_0, 32;
    %load/v 41, v0x196d9a0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196d9a0_0, 32;
    %load/v 41, v0x196d920_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_2.142, 8;
    %set/v v0x196d8a0_0, 1, 2;
T_2.142 ;
T_2.141 ;
T_2.139 ;
T_2.137 ;
T_2.135 ;
T_2.133 ;
T_2.131 ;
T_2.129 ;
T_2.127 ;
T_2.125 ;
T_2.123 ;
T_2.121 ;
T_2.119 ;
T_2.117 ;
T_2.115 ;
T_2.113 ;
T_2.111 ;
T_2.109 ;
T_2.107 ;
T_2.105 ;
T_2.103 ;
T_2.101 ;
T_2.99 ;
T_2.97 ;
    %end;
S_0x189fb80 .scope module, "execute3" "execute" 4 37, 4 40, S_0x18dba40;
 .timescale 0 0;
v0x196c960_0 .alias "CLK", 0 0, v0x1973130_0;
v0x196ca20_0 .alias "RST", 0 0, v0x19731b0_0;
v0x196cac0_0 .var "count", 31 0;
v0x196cb60_0 .var "data", 63 0;
v0x196cc10_0 .alias "data_i", 1 0, v0x1975f70_0;
v0x196ccb0_0 .var "data_o", 0 0;
v0x196cd90 .array "pre00", 63 0, 1 0;
v0x196ce10 .array "pre01", 63 0, 1 0;
v0x196cee0 .array "pre10", 63 0, 1 0;
v0x196cf60 .array "pre11", 63 0, 1 0;
v0x196d040_0 .var "state", 1 0;
v0x196d0e0_0 .var "sum00", 31 0;
v0x196d1f0_0 .var "sum01", 31 0;
v0x196d290_0 .var "sum10", 31 0;
v0x196d3b0_0 .var "sum11", 31 0;
v0x196d450_0 .alias "valid_i", 0 0, v0x1972900_0;
v0x196d310_0 .var "valid_o", 0 0;
v0x196d5a0_0 .var "working", 0 0;
E_0x1899570/0 .event negedge, v0x196ca20_0;
E_0x1899570/1 .event posedge, v0x196c960_0;
E_0x1899570 .event/or E_0x1899570/0, E_0x1899570/1;
S_0x1922940 .scope function, "min" "min" 4 115, 4 115, S_0x189fb80;
 .timescale 0 0;
v0x18994c0_0 .var "min", 1 0;
v0x196c6d0_0 .var "sum00", 31 0;
v0x196c770_0 .var "sum01", 31 0;
v0x196c810_0 .var "sum10", 31 0;
v0x196c8c0_0 .var "sum11", 31 0;
TD_viterbisim.viterbi.execute3.min ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.144, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.145;
T_3.144 ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.146, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.147;
T_3.146 ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.148, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.149;
T_3.148 ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.150, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.151;
T_3.150 ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.152, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.153;
T_3.152 ;
    %load/v 8, v0x196c6d0_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.154, 8;
    %set/v v0x18994c0_0, 0, 2;
    %jmp T_3.155;
T_3.154 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.156, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.157;
T_3.156 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.158, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.159;
T_3.158 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.160, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.161;
T_3.160 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.162, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.163;
T_3.162 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.164, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.165;
T_3.164 ;
    %load/v 8, v0x196c770_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.166, 8;
    %movi 8, 1, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.167;
T_3.166 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.168, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.169;
T_3.168 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.170, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.171;
T_3.170 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.172, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.173;
T_3.172 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c8c0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.174, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.175;
T_3.174 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.176, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.177;
T_3.176 ;
    %load/v 8, v0x196c810_0, 32;
    %load/v 40, v0x196c8c0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c8c0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.178, 8;
    %movi 8, 2, 2;
    %set/v v0x18994c0_0, 8, 2;
    %jmp T_3.179;
T_3.178 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.180, 8;
    %set/v v0x18994c0_0, 1, 2;
    %jmp T_3.181;
T_3.180 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c6d0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.182, 8;
    %set/v v0x18994c0_0, 1, 2;
    %jmp T_3.183;
T_3.182 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.184, 8;
    %set/v v0x18994c0_0, 1, 2;
    %jmp T_3.185;
T_3.184 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c770_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c810_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.186, 8;
    %set/v v0x18994c0_0, 1, 2;
    %jmp T_3.187;
T_3.186 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c6d0_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.188, 8;
    %set/v v0x18994c0_0, 1, 2;
    %jmp T_3.189;
T_3.188 ;
    %load/v 8, v0x196c8c0_0, 32;
    %load/v 40, v0x196c810_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196c810_0, 32;
    %load/v 41, v0x196c770_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %load/v 9, v0x196c770_0, 32;
    %load/v 41, v0x196c6d0_0, 32;
    %cmp/u 9, 41, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_3.190, 8;
    %set/v v0x18994c0_0, 1, 2;
T_3.190 ;
T_3.189 ;
T_3.187 ;
T_3.185 ;
T_3.183 ;
T_3.181 ;
T_3.179 ;
T_3.177 ;
T_3.175 ;
T_3.173 ;
T_3.171 ;
T_3.169 ;
T_3.167 ;
T_3.165 ;
T_3.163 ;
T_3.161 ;
T_3.159 ;
T_3.157 ;
T_3.155 ;
T_3.153 ;
T_3.151 ;
T_3.149 ;
T_3.147 ;
T_3.145 ;
    %end;
    .scope S_0x1973040;
T_4 ;
    %wait E_0x1899570;
    %load/v 8, v0x19731b0_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_4.0, 4;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1973230_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x19732b0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973330_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973530_0, 0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/v 8, v0x19734b0_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973530_0, 0, 8;
    %load/v 8, v0x19733b0_0, 1;
    %load/v 9, v0x1973330_0, 1;
    %xor 8, 9, 1;
    %ix/load 0, 1, 0;
    %ix/load 1, 0, 0;
    %assign/v0/x1 v0x1973430_0, 0, 8;
    %load/v 8, v0x19733b0_0, 1;
    %load/v 9, v0x19732b0_0, 1;
    %xor 8, 9, 1;
    %load/v 9, v0x1973330_0, 1;
    %xor 8, 9, 1;
    %ix/load 0, 1, 0;
    %ix/load 1, 1, 0;
    %assign/v0/x1 v0x1973430_0, 0, 8;
    %load/v 8, v0x1973230_0, 6;
    %cmpi/u 8, 63, 6;
    %inv 4, 1;
    %mov 8, 4, 1;
    %load/v 9, v0x19734b0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_4.2, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1973230_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1973230_0, 0, 8;
    %load/v 8, v0x19733b0_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x19732b0_0, 0, 8;
    %load/v 8, v0x19732b0_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973330_0, 0, 8;
    %jmp T_4.3;
T_4.2 ;
    %load/v 8, v0x1973230_0, 6;
    %cmpi/u 8, 63, 6;
    %mov 8, 4, 1;
    %load/v 9, v0x19734b0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_4.4, 8;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1973230_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x19732b0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973330_0, 0, 0;
T_4.4 ;
T_4.3 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0x196f830;
T_5 ;
    %wait E_0x1899570;
    %load/v 8, v0x196fd70_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_5.0, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970720_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970490_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x19702d0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970370_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970410_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970530_0, 0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/v 8, v0x19705d0_0, 1;
    %jmp/0xz  T_5.2, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970720_0, 0, 1;
T_5.2 ;
    %load/v 8, v0x19705d0_0, 1;
    %load/v 9, v0x1970720_0, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_5.4, 8;
    %load/v 8, v0x196fdf0_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_5.6, 4;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.8, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.9;
T_5.8 ;
    %mov 72, 2, 1;
T_5.9 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x19702d0_0, 0, 8;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.10, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.11;
T_5.10 ;
    %mov 72, 2, 1;
T_5.11 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970410_0, 0, 8;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970030, 0, 0;
t_0 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970130, 0, 0;
t_1 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.7;
T_5.6 ;
    %load/v 8, v0x196fdf0_0, 32;
    %cmpi/u 8, 1, 32;
    %jmp/0xz  T_5.12, 4;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.14, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.15;
T_5.14 ;
    %mov 72, 2, 1;
T_5.15 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x19702d0_0, 0, 8;
    %load/v 8, v0x1970410_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.16, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.17;
T_5.16 ;
    %mov 72, 2, 1;
T_5.17 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970370_0, 0, 8;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.18, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.19;
T_5.18 ;
    %mov 72, 2, 1;
T_5.19 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970410_0, 0, 8;
    %load/v 8, v0x1970410_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.20, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.21;
T_5.20 ;
    %mov 72, 2, 1;
T_5.21 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970530_0, 0, 8;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_2, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970030, 0, 0;
t_2 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_3, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x19700b0, 0, 8;
t_3 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_4, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970130, 0, 0;
t_4 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_5, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x19701b0, 0, 8;
t_5 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.13;
T_5.12 ;
    %movi 8, 2, 32;
    %load/v 40, v0x196fdf0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fdf0_0, 32;
   %cmpi/u 9, 63, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_5.22, 8;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.27, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.28;
T_5.27 ;
    %mov 72, 2, 1;
T_5.28 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970370_0, 32;
    %load/v 104, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.29, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.30;
T_5.29 ;
    %mov 104, 2, 1;
T_5.30 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.24, 8;
    %load/v 9, v0x19702d0_0, 32;
    %load/v 41, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.31, 4;
    %load/x1p 73, v0x196ff10_0, 1;
    %jmp T_5.32;
T_5.31 ;
    %mov 73, 2, 1;
T_5.32 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_5.26, 8;
T_5.24 ; End of true expr.
    %load/v 41, v0x1970370_0, 32;
    %load/v 105, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.33, 4;
    %load/x1p 105, v0x196ff10_0, 1;
    %jmp T_5.34;
T_5.33 ;
    %mov 105, 2, 1;
T_5.34 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_5.25, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_5.26;
T_5.25 ;
    %mov 9, 41, 32; Return false value
T_5.26 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x19702d0_0, 0, 9;
    %load/v 8, v0x1970410_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.38, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.39;
T_5.38 ;
    %mov 72, 2, 1;
T_5.39 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970530_0, 32;
    %load/v 104, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.40, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.41;
T_5.40 ;
    %mov 104, 2, 1;
T_5.41 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.35, 8;
    %load/v 9, v0x1970410_0, 32;
    %load/v 41, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.42, 4;
    %load/x1p 73, v0x196ff10_0, 1;
    %jmp T_5.43;
T_5.42 ;
    %mov 73, 2, 1;
T_5.43 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_5.37, 8;
T_5.35 ; End of true expr.
    %load/v 41, v0x1970530_0, 32;
    %load/v 105, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.44, 4;
    %load/x1p 105, v0x196ff10_0, 1;
    %jmp T_5.45;
T_5.44 ;
    %mov 105, 2, 1;
T_5.45 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_5.36, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_5.37;
T_5.36 ;
    %mov 9, 41, 32; Return false value
T_5.37 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970370_0, 0, 9;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.49, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.50;
T_5.49 ;
    %mov 72, 2, 1;
T_5.50 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970370_0, 32;
    %load/v 72, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.51, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.52;
T_5.51 ;
    %mov 104, 2, 1;
T_5.52 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.46, 8;
    %load/v 9, v0x19702d0_0, 32;
    %load/v 73, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.53, 4;
    %load/x1p 73, v0x196ff10_0, 1;
    %jmp T_5.54;
T_5.53 ;
    %mov 73, 2, 1;
T_5.54 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_5.48, 8;
T_5.46 ; End of true expr.
    %load/v 41, v0x1970370_0, 32;
    %load/v 73, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.55, 4;
    %load/x1p 105, v0x196ff10_0, 1;
    %jmp T_5.56;
T_5.55 ;
    %mov 105, 2, 1;
T_5.56 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_5.47, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_5.48;
T_5.47 ;
    %mov 9, 41, 32; Return false value
T_5.48 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970410_0, 0, 9;
    %load/v 8, v0x1970410_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.60, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.61;
T_5.60 ;
    %mov 72, 2, 1;
T_5.61 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970530_0, 32;
    %load/v 72, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.62, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.63;
T_5.62 ;
    %mov 104, 2, 1;
T_5.63 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.57, 8;
    %load/v 9, v0x1970410_0, 32;
    %load/v 73, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.64, 4;
    %load/x1p 73, v0x196ff10_0, 1;
    %jmp T_5.65;
T_5.64 ;
    %mov 73, 2, 1;
T_5.65 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_5.59, 8;
T_5.57 ; End of true expr.
    %load/v 41, v0x1970530_0, 32;
    %load/v 73, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.66, 4;
    %load/x1p 105, v0x196ff10_0, 1;
    %jmp T_5.67;
T_5.66 ;
    %mov 105, 2, 1;
T_5.67 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_5.58, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_5.59;
T_5.58 ;
    %mov 9, 41, 32; Return false value
T_5.59 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970530_0, 0, 9;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.71, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.72;
T_5.71 ;
    %mov 72, 2, 1;
T_5.72 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970370_0, 32;
    %load/v 104, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.73, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.74;
T_5.73 ;
    %mov 104, 2, 1;
T_5.74 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.68, 8;
    %mov 9, 0, 2;
    %jmp/1  T_5.70, 8;
T_5.68 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_5.69, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_5.70;
T_5.69 ;
    %mov 9, 11, 2; Return false value
T_5.70 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_6, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970030, 0, 9;
t_6 ;
    %load/v 8, v0x1970410_0, 32;
    %load/v 40, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.78, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.79;
T_5.78 ;
    %mov 72, 2, 1;
T_5.79 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970530_0, 32;
    %load/v 104, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.80, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.81;
T_5.80 ;
    %mov 104, 2, 1;
T_5.81 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.75, 8;
    %movi 9, 2, 2;
    %jmp/1  T_5.77, 8;
T_5.75 ; End of true expr.
    %jmp/0  T_5.76, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_5.77;
T_5.76 ;
    %mov 9, 1, 2; Return false value
T_5.77 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_7, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x19700b0, 0, 9;
t_7 ;
    %load/v 8, v0x19702d0_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.85, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.86;
T_5.85 ;
    %mov 72, 2, 1;
T_5.86 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970370_0, 32;
    %load/v 72, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.87, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.88;
T_5.87 ;
    %mov 104, 2, 1;
T_5.88 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.82, 8;
    %mov 9, 0, 2;
    %jmp/1  T_5.84, 8;
T_5.82 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_5.83, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_5.84;
T_5.83 ;
    %mov 9, 11, 2; Return false value
T_5.84 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_8, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1970130, 0, 9;
t_8 ;
    %load/v 8, v0x1970410_0, 32;
    %load/v 72, v0x196ff10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.92, 4;
    %load/x1p 72, v0x196ff10_0, 1;
    %jmp T_5.93;
T_5.92 ;
    %mov 72, 2, 1;
T_5.93 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x1970530_0, 32;
    %load/v 72, v0x196ff10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_5.94, 4;
    %load/x1p 104, v0x196ff10_0, 1;
    %jmp T_5.95;
T_5.94 ;
    %mov 104, 2, 1;
T_5.95 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_5.89, 8;
    %movi 9, 2, 2;
    %jmp/1  T_5.91, 8;
T_5.89 ; End of true expr.
    %jmp/0  T_5.90, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_5.91;
T_5.90 ;
    %mov 9, 1, 2; Return false value
T_5.91 ;
    %ix/getv 3, v0x196fdf0_0;
    %jmp/1 t_9, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x19701b0, 0, 9;
t_9 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.23;
T_5.22 ;
    %load/v 8, v0x196fdf0_0, 32;
    %cmpi/u 8, 64, 32;
    %jmp/0xz  T_5.96, 4;
    %load/v 8, v0x19702d0_0, 32;
    %set/v v0x196fa90_0, 8, 32;
    %load/v 8, v0x1970370_0, 32;
    %set/v v0x196fb10_0, 8, 32;
    %load/v 8, v0x1970410_0, 32;
    %set/v v0x196fbb0_0, 8, 32;
    %load/v 8, v0x1970530_0, 32;
    %set/v v0x196fc30_0, 8, 32;
    %fork TD_viterbisim.viterbi.execute0.min, S_0x196f920;
    %join;
    %load/v  8, v0x196fa10_0, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1970230_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.97;
T_5.96 ;
    %movi 8, 65, 32;
    %load/v 40, v0x196fdf0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fdf0_0, 32;
   %cmpi/u 9, 128, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_5.98, 8;
    %load/v 8, v0x1970230_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %load/v 9, v0x1970230_0, 2;
    %cmpi/u 9, 1, 2;
    %or 8, 4, 1;
    %jmp/0  T_5.100, 8;
    %mov 9, 0, 1;
    %jmp/1  T_5.102, 8;
T_5.100 ; End of true expr.
    %jmp/0  T_5.101, 8;
 ; End of false expr.
    %blend  9, 1, 1; Condition unknown.
    %jmp  T_5.102;
T_5.101 ;
    %mov 9, 1, 1; Return false value
T_5.102 ;
    %movi 10, 128, 32;
    %load/v 42, v0x196fdf0_0, 32;
    %sub 10, 42, 32;
    %ix/get 1, 10, 32;
    %jmp/1 t_10, 4;
    %ix/load 0, 1, 0;
    %assign/v0/x1 v0x196fe90_0, 0, 9;
t_10 ;
    %load/v 8, v0x1970230_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %jmp/0  T_5.103, 8;
    %movi 11, 128, 32;
    %load/v 43, v0x196fdf0_0, 32;
    %sub 11, 43, 32;
    %ix/get 3, 11, 32;
    %load/av 9, v0x1970030, 2;
    %jmp/1  T_5.105, 8;
T_5.103 ; End of true expr.
    %load/v 11, v0x1970230_0, 2;
    %cmpi/u 11, 1, 2;
    %mov 11, 4, 1;
    %jmp/0  T_5.106, 11;
    %movi 14, 128, 32;
    %load/v 46, v0x196fdf0_0, 32;
    %sub 14, 46, 32;
    %ix/get 3, 14, 32;
    %load/av 12, v0x19700b0, 2;
    %jmp/1  T_5.108, 11;
T_5.106 ; End of true expr.
    %load/v 14, v0x1970230_0, 2;
    %cmpi/u 14, 2, 2;
    %mov 14, 4, 1;
    %jmp/0  T_5.109, 14;
    %movi 17, 128, 32;
    %load/v 49, v0x196fdf0_0, 32;
    %sub 17, 49, 32;
    %ix/get 3, 17, 32;
    %load/av 15, v0x1970130, 2;
    %jmp/1  T_5.111, 14;
T_5.109 ; End of true expr.
    %movi 19, 128, 32;
    %load/v 51, v0x196fdf0_0, 32;
    %sub 19, 51, 32;
    %ix/get 3, 19, 32;
    %load/av 17, v0x19701b0, 2;
    %jmp/0  T_5.110, 14;
 ; End of false expr.
    %blend  15, 17, 2; Condition unknown.
    %jmp  T_5.111;
T_5.110 ;
    %mov 15, 17, 2; Return false value
T_5.111 ;
    %jmp/0  T_5.107, 11;
 ; End of false expr.
    %blend  12, 15, 2; Condition unknown.
    %jmp  T_5.108;
T_5.107 ;
    %mov 12, 15, 2; Return false value
T_5.108 ;
    %jmp/0  T_5.104, 8;
 ; End of false expr.
    %blend  9, 12, 2; Condition unknown.
    %jmp  T_5.105;
T_5.104 ;
    %mov 9, 12, 2; Return false value
T_5.105 ;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1970230_0, 0, 9;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.99;
T_5.98 ;
    %movi 8, 129, 32;
    %load/v 40, v0x196fdf0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196fdf0_0, 32;
   %cmpi/u 9, 192, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_5.112, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970490_0, 0, 1;
    %load/v 8, v0x196fdf0_0, 32;
    %subi 8, 129, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_5.114, 4;
    %load/x1p 8, v0x196fe90_0, 1;
    %jmp T_5.115;
T_5.114 ;
    %mov 8, 2, 1;
T_5.115 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x196ff90_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196fdf0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 8;
    %jmp T_5.113;
T_5.112 ;
    %load/v 8, v0x196fdf0_0, 32;
    %cmpi/u 8, 193, 32;
    %jmp/0xz  T_5.116, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970720_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196fdf0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1970490_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x19702d0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970370_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970410_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1970530_0, 0, 0;
T_5.116 ;
T_5.113 ;
T_5.99 ;
T_5.97 ;
T_5.23 ;
T_5.13 ;
T_5.7 ;
T_5.4 ;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0x196e730;
T_6 ;
    %wait E_0x1899570;
    %load/v 8, v0x196ec70_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_6.0, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f710_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f480_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f2c0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f360_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f400_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f520_0, 0, 0;
    %jmp T_6.1;
T_6.0 ;
    %load/v 8, v0x196f5c0_0, 1;
    %jmp/0xz  T_6.2, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f710_0, 0, 1;
T_6.2 ;
    %load/v 8, v0x196f5c0_0, 1;
    %load/v 9, v0x196f710_0, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_6.4, 8;
    %load/v 8, v0x196ed40_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_6.6, 4;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.8, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.9;
T_6.8 ;
    %mov 72, 2, 1;
T_6.9 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f2c0_0, 0, 8;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.10, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.11;
T_6.10 ;
    %mov 72, 2, 1;
T_6.11 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f400_0, 0, 8;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_11, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196efd0, 0, 0;
t_11 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_12, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f120, 0, 0;
t_12 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.7;
T_6.6 ;
    %load/v 8, v0x196ed40_0, 32;
    %cmpi/u 8, 1, 32;
    %jmp/0xz  T_6.12, 4;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.14, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.15;
T_6.14 ;
    %mov 72, 2, 1;
T_6.15 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f2c0_0, 0, 8;
    %load/v 8, v0x196f400_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.16, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.17;
T_6.16 ;
    %mov 72, 2, 1;
T_6.17 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f360_0, 0, 8;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.18, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.19;
T_6.18 ;
    %mov 72, 2, 1;
T_6.19 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f400_0, 0, 8;
    %load/v 8, v0x196f400_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.20, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.21;
T_6.20 ;
    %mov 72, 2, 1;
T_6.21 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f520_0, 0, 8;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_13, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196efd0, 0, 0;
t_13 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_14, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f050, 0, 8;
t_14 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_15, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f120, 0, 0;
t_15 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_16, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f1a0, 0, 8;
t_16 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.13;
T_6.12 ;
    %movi 8, 2, 32;
    %load/v 40, v0x196ed40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ed40_0, 32;
   %cmpi/u 9, 63, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_6.22, 8;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.27, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.28;
T_6.27 ;
    %mov 72, 2, 1;
T_6.28 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f360_0, 32;
    %load/v 104, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.29, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.30;
T_6.29 ;
    %mov 104, 2, 1;
T_6.30 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.24, 8;
    %load/v 9, v0x196f2c0_0, 32;
    %load/v 41, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.31, 4;
    %load/x1p 73, v0x196ee60_0, 1;
    %jmp T_6.32;
T_6.31 ;
    %mov 73, 2, 1;
T_6.32 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_6.26, 8;
T_6.24 ; End of true expr.
    %load/v 41, v0x196f360_0, 32;
    %load/v 105, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.33, 4;
    %load/x1p 105, v0x196ee60_0, 1;
    %jmp T_6.34;
T_6.33 ;
    %mov 105, 2, 1;
T_6.34 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_6.25, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_6.26;
T_6.25 ;
    %mov 9, 41, 32; Return false value
T_6.26 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f2c0_0, 0, 9;
    %load/v 8, v0x196f400_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.38, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.39;
T_6.38 ;
    %mov 72, 2, 1;
T_6.39 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f520_0, 32;
    %load/v 104, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.40, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.41;
T_6.40 ;
    %mov 104, 2, 1;
T_6.41 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.35, 8;
    %load/v 9, v0x196f400_0, 32;
    %load/v 41, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.42, 4;
    %load/x1p 73, v0x196ee60_0, 1;
    %jmp T_6.43;
T_6.42 ;
    %mov 73, 2, 1;
T_6.43 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_6.37, 8;
T_6.35 ; End of true expr.
    %load/v 41, v0x196f520_0, 32;
    %load/v 105, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.44, 4;
    %load/x1p 105, v0x196ee60_0, 1;
    %jmp T_6.45;
T_6.44 ;
    %mov 105, 2, 1;
T_6.45 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_6.36, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_6.37;
T_6.36 ;
    %mov 9, 41, 32; Return false value
T_6.37 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f360_0, 0, 9;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.49, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.50;
T_6.49 ;
    %mov 72, 2, 1;
T_6.50 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f360_0, 32;
    %load/v 72, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.51, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.52;
T_6.51 ;
    %mov 104, 2, 1;
T_6.52 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.46, 8;
    %load/v 9, v0x196f2c0_0, 32;
    %load/v 73, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.53, 4;
    %load/x1p 73, v0x196ee60_0, 1;
    %jmp T_6.54;
T_6.53 ;
    %mov 73, 2, 1;
T_6.54 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_6.48, 8;
T_6.46 ; End of true expr.
    %load/v 41, v0x196f360_0, 32;
    %load/v 73, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.55, 4;
    %load/x1p 105, v0x196ee60_0, 1;
    %jmp T_6.56;
T_6.55 ;
    %mov 105, 2, 1;
T_6.56 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_6.47, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_6.48;
T_6.47 ;
    %mov 9, 41, 32; Return false value
T_6.48 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f400_0, 0, 9;
    %load/v 8, v0x196f400_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.60, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.61;
T_6.60 ;
    %mov 72, 2, 1;
T_6.61 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f520_0, 32;
    %load/v 72, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.62, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.63;
T_6.62 ;
    %mov 104, 2, 1;
T_6.63 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.57, 8;
    %load/v 9, v0x196f400_0, 32;
    %load/v 73, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.64, 4;
    %load/x1p 73, v0x196ee60_0, 1;
    %jmp T_6.65;
T_6.64 ;
    %mov 73, 2, 1;
T_6.65 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_6.59, 8;
T_6.57 ; End of true expr.
    %load/v 41, v0x196f520_0, 32;
    %load/v 73, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.66, 4;
    %load/x1p 105, v0x196ee60_0, 1;
    %jmp T_6.67;
T_6.66 ;
    %mov 105, 2, 1;
T_6.67 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_6.58, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_6.59;
T_6.58 ;
    %mov 9, 41, 32; Return false value
T_6.59 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f520_0, 0, 9;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.71, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.72;
T_6.71 ;
    %mov 72, 2, 1;
T_6.72 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f360_0, 32;
    %load/v 104, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.73, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.74;
T_6.73 ;
    %mov 104, 2, 1;
T_6.74 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.68, 8;
    %mov 9, 0, 2;
    %jmp/1  T_6.70, 8;
T_6.68 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_6.69, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_6.70;
T_6.69 ;
    %mov 9, 11, 2; Return false value
T_6.70 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_17, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196efd0, 0, 9;
t_17 ;
    %load/v 8, v0x196f400_0, 32;
    %load/v 40, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.78, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.79;
T_6.78 ;
    %mov 72, 2, 1;
T_6.79 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f520_0, 32;
    %load/v 104, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.80, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.81;
T_6.80 ;
    %mov 104, 2, 1;
T_6.81 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.75, 8;
    %movi 9, 2, 2;
    %jmp/1  T_6.77, 8;
T_6.75 ; End of true expr.
    %jmp/0  T_6.76, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_6.77;
T_6.76 ;
    %mov 9, 1, 2; Return false value
T_6.77 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_18, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f050, 0, 9;
t_18 ;
    %load/v 8, v0x196f2c0_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.85, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.86;
T_6.85 ;
    %mov 72, 2, 1;
T_6.86 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f360_0, 32;
    %load/v 72, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.87, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.88;
T_6.87 ;
    %mov 104, 2, 1;
T_6.88 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.82, 8;
    %mov 9, 0, 2;
    %jmp/1  T_6.84, 8;
T_6.82 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_6.83, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_6.84;
T_6.83 ;
    %mov 9, 11, 2; Return false value
T_6.84 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_19, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f120, 0, 9;
t_19 ;
    %load/v 8, v0x196f400_0, 32;
    %load/v 72, v0x196ee60_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.92, 4;
    %load/x1p 72, v0x196ee60_0, 1;
    %jmp T_6.93;
T_6.92 ;
    %mov 72, 2, 1;
T_6.93 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196f520_0, 32;
    %load/v 72, v0x196ee60_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_6.94, 4;
    %load/x1p 104, v0x196ee60_0, 1;
    %jmp T_6.95;
T_6.94 ;
    %mov 104, 2, 1;
T_6.95 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_6.89, 8;
    %movi 9, 2, 2;
    %jmp/1  T_6.91, 8;
T_6.89 ; End of true expr.
    %jmp/0  T_6.90, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_6.91;
T_6.90 ;
    %mov 9, 1, 2; Return false value
T_6.91 ;
    %ix/getv 3, v0x196ed40_0;
    %jmp/1 t_20, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196f1a0, 0, 9;
t_20 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.23;
T_6.22 ;
    %load/v 8, v0x196ed40_0, 32;
    %cmpi/u 8, 64, 32;
    %jmp/0xz  T_6.96, 4;
    %load/v 8, v0x196f2c0_0, 32;
    %set/v v0x196e990_0, 8, 32;
    %load/v 8, v0x196f360_0, 32;
    %set/v v0x196ea10_0, 8, 32;
    %load/v 8, v0x196f400_0, 32;
    %set/v v0x196eab0_0, 8, 32;
    %load/v 8, v0x196f520_0, 32;
    %set/v v0x196eb30_0, 8, 32;
    %fork TD_viterbisim.viterbi.execute1.min, S_0x196e820;
    %join;
    %load/v  8, v0x196e910_0, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196f220_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.97;
T_6.96 ;
    %movi 8, 65, 32;
    %load/v 40, v0x196ed40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ed40_0, 32;
   %cmpi/u 9, 128, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_6.98, 8;
    %load/v 8, v0x196f220_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %load/v 9, v0x196f220_0, 2;
    %cmpi/u 9, 1, 2;
    %or 8, 4, 1;
    %jmp/0  T_6.100, 8;
    %mov 9, 0, 1;
    %jmp/1  T_6.102, 8;
T_6.100 ; End of true expr.
    %jmp/0  T_6.101, 8;
 ; End of false expr.
    %blend  9, 1, 1; Condition unknown.
    %jmp  T_6.102;
T_6.101 ;
    %mov 9, 1, 1; Return false value
T_6.102 ;
    %movi 10, 128, 32;
    %load/v 42, v0x196ed40_0, 32;
    %sub 10, 42, 32;
    %ix/get 1, 10, 32;
    %jmp/1 t_21, 4;
    %ix/load 0, 1, 0;
    %assign/v0/x1 v0x196ede0_0, 0, 9;
t_21 ;
    %load/v 8, v0x196f220_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %jmp/0  T_6.103, 8;
    %movi 11, 128, 32;
    %load/v 43, v0x196ed40_0, 32;
    %sub 11, 43, 32;
    %ix/get 3, 11, 32;
    %load/av 9, v0x196efd0, 2;
    %jmp/1  T_6.105, 8;
T_6.103 ; End of true expr.
    %load/v 11, v0x196f220_0, 2;
    %cmpi/u 11, 1, 2;
    %mov 11, 4, 1;
    %jmp/0  T_6.106, 11;
    %movi 14, 128, 32;
    %load/v 46, v0x196ed40_0, 32;
    %sub 14, 46, 32;
    %ix/get 3, 14, 32;
    %load/av 12, v0x196f050, 2;
    %jmp/1  T_6.108, 11;
T_6.106 ; End of true expr.
    %load/v 14, v0x196f220_0, 2;
    %cmpi/u 14, 2, 2;
    %mov 14, 4, 1;
    %jmp/0  T_6.109, 14;
    %movi 17, 128, 32;
    %load/v 49, v0x196ed40_0, 32;
    %sub 17, 49, 32;
    %ix/get 3, 17, 32;
    %load/av 15, v0x196f120, 2;
    %jmp/1  T_6.111, 14;
T_6.109 ; End of true expr.
    %movi 19, 128, 32;
    %load/v 51, v0x196ed40_0, 32;
    %sub 19, 51, 32;
    %ix/get 3, 19, 32;
    %load/av 17, v0x196f1a0, 2;
    %jmp/0  T_6.110, 14;
 ; End of false expr.
    %blend  15, 17, 2; Condition unknown.
    %jmp  T_6.111;
T_6.110 ;
    %mov 15, 17, 2; Return false value
T_6.111 ;
    %jmp/0  T_6.107, 11;
 ; End of false expr.
    %blend  12, 15, 2; Condition unknown.
    %jmp  T_6.108;
T_6.107 ;
    %mov 12, 15, 2; Return false value
T_6.108 ;
    %jmp/0  T_6.104, 8;
 ; End of false expr.
    %blend  9, 12, 2; Condition unknown.
    %jmp  T_6.105;
T_6.104 ;
    %mov 9, 12, 2; Return false value
T_6.105 ;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196f220_0, 0, 9;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.99;
T_6.98 ;
    %movi 8, 129, 32;
    %load/v 40, v0x196ed40_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196ed40_0, 32;
   %cmpi/u 9, 192, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_6.112, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f480_0, 0, 1;
    %load/v 8, v0x196ed40_0, 32;
    %subi 8, 129, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_6.114, 4;
    %load/x1p 8, v0x196ede0_0, 1;
    %jmp T_6.115;
T_6.114 ;
    %mov 8, 2, 1;
T_6.115 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x196ef30_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196ed40_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 8;
    %jmp T_6.113;
T_6.112 ;
    %load/v 8, v0x196ed40_0, 32;
    %cmpi/u 8, 193, 32;
    %jmp/0xz  T_6.116, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f710_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196ed40_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196f480_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f2c0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f360_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f400_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196f520_0, 0, 0;
T_6.116 ;
T_6.113 ;
T_6.99 ;
T_6.97 ;
T_6.23 ;
T_6.13 ;
T_6.7 ;
T_6.4 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_0x196d6c0;
T_7 ;
    %wait E_0x1899570;
    %load/v 8, v0x196dc30_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_7.0, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e610_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e380_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e1c0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e260_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e300_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e420_0, 0, 0;
    %jmp T_7.1;
T_7.0 ;
    %load/v 8, v0x196e4c0_0, 1;
    %jmp/0xz  T_7.2, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e610_0, 0, 1;
T_7.2 ;
    %load/v 8, v0x196e4c0_0, 1;
    %load/v 9, v0x196e610_0, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_7.4, 8;
    %load/v 8, v0x196dce0_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_7.6, 4;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.8, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.9;
T_7.8 ;
    %mov 72, 2, 1;
T_7.9 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e1c0_0, 0, 8;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.10, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.11;
T_7.10 ;
    %mov 72, 2, 1;
T_7.11 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e300_0, 0, 8;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_22, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196df40, 0, 0;
t_22 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_23, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196e040, 0, 0;
t_23 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.7;
T_7.6 ;
    %load/v 8, v0x196dce0_0, 32;
    %cmpi/u 8, 1, 32;
    %jmp/0xz  T_7.12, 4;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.14, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.15;
T_7.14 ;
    %mov 72, 2, 1;
T_7.15 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e1c0_0, 0, 8;
    %load/v 8, v0x196e300_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.16, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.17;
T_7.16 ;
    %mov 72, 2, 1;
T_7.17 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e260_0, 0, 8;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.18, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.19;
T_7.18 ;
    %mov 72, 2, 1;
T_7.19 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e300_0, 0, 8;
    %load/v 8, v0x196e300_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.20, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.21;
T_7.20 ;
    %mov 72, 2, 1;
T_7.21 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e420_0, 0, 8;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_24, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196df40, 0, 0;
t_24 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_25, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196dfc0, 0, 8;
t_25 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_26, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196e040, 0, 0;
t_26 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_27, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196e0c0, 0, 8;
t_27 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.13;
T_7.12 ;
    %movi 8, 2, 32;
    %load/v 40, v0x196dce0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dce0_0, 32;
   %cmpi/u 9, 63, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_7.22, 8;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.27, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.28;
T_7.27 ;
    %mov 72, 2, 1;
T_7.28 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e260_0, 32;
    %load/v 104, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.29, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.30;
T_7.29 ;
    %mov 104, 2, 1;
T_7.30 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.24, 8;
    %load/v 9, v0x196e1c0_0, 32;
    %load/v 41, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.31, 4;
    %load/x1p 73, v0x196de10_0, 1;
    %jmp T_7.32;
T_7.31 ;
    %mov 73, 2, 1;
T_7.32 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_7.26, 8;
T_7.24 ; End of true expr.
    %load/v 41, v0x196e260_0, 32;
    %load/v 105, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.33, 4;
    %load/x1p 105, v0x196de10_0, 1;
    %jmp T_7.34;
T_7.33 ;
    %mov 105, 2, 1;
T_7.34 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_7.25, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_7.26;
T_7.25 ;
    %mov 9, 41, 32; Return false value
T_7.26 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e1c0_0, 0, 9;
    %load/v 8, v0x196e300_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.38, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.39;
T_7.38 ;
    %mov 72, 2, 1;
T_7.39 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e420_0, 32;
    %load/v 104, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.40, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.41;
T_7.40 ;
    %mov 104, 2, 1;
T_7.41 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.35, 8;
    %load/v 9, v0x196e300_0, 32;
    %load/v 41, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.42, 4;
    %load/x1p 73, v0x196de10_0, 1;
    %jmp T_7.43;
T_7.42 ;
    %mov 73, 2, 1;
T_7.43 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_7.37, 8;
T_7.35 ; End of true expr.
    %load/v 41, v0x196e420_0, 32;
    %load/v 105, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.44, 4;
    %load/x1p 105, v0x196de10_0, 1;
    %jmp T_7.45;
T_7.44 ;
    %mov 105, 2, 1;
T_7.45 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_7.36, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_7.37;
T_7.36 ;
    %mov 9, 41, 32; Return false value
T_7.37 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e260_0, 0, 9;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.49, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.50;
T_7.49 ;
    %mov 72, 2, 1;
T_7.50 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e260_0, 32;
    %load/v 72, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.51, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.52;
T_7.51 ;
    %mov 104, 2, 1;
T_7.52 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.46, 8;
    %load/v 9, v0x196e1c0_0, 32;
    %load/v 73, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.53, 4;
    %load/x1p 73, v0x196de10_0, 1;
    %jmp T_7.54;
T_7.53 ;
    %mov 73, 2, 1;
T_7.54 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_7.48, 8;
T_7.46 ; End of true expr.
    %load/v 41, v0x196e260_0, 32;
    %load/v 73, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.55, 4;
    %load/x1p 105, v0x196de10_0, 1;
    %jmp T_7.56;
T_7.55 ;
    %mov 105, 2, 1;
T_7.56 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_7.47, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_7.48;
T_7.47 ;
    %mov 9, 41, 32; Return false value
T_7.48 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e300_0, 0, 9;
    %load/v 8, v0x196e300_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.60, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.61;
T_7.60 ;
    %mov 72, 2, 1;
T_7.61 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e420_0, 32;
    %load/v 72, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.62, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.63;
T_7.62 ;
    %mov 104, 2, 1;
T_7.63 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.57, 8;
    %load/v 9, v0x196e300_0, 32;
    %load/v 73, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.64, 4;
    %load/x1p 73, v0x196de10_0, 1;
    %jmp T_7.65;
T_7.64 ;
    %mov 73, 2, 1;
T_7.65 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_7.59, 8;
T_7.57 ; End of true expr.
    %load/v 41, v0x196e420_0, 32;
    %load/v 73, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.66, 4;
    %load/x1p 105, v0x196de10_0, 1;
    %jmp T_7.67;
T_7.66 ;
    %mov 105, 2, 1;
T_7.67 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_7.58, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_7.59;
T_7.58 ;
    %mov 9, 41, 32; Return false value
T_7.59 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e420_0, 0, 9;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.71, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.72;
T_7.71 ;
    %mov 72, 2, 1;
T_7.72 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e260_0, 32;
    %load/v 104, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.73, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.74;
T_7.73 ;
    %mov 104, 2, 1;
T_7.74 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.68, 8;
    %mov 9, 0, 2;
    %jmp/1  T_7.70, 8;
T_7.68 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_7.69, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_7.70;
T_7.69 ;
    %mov 9, 11, 2; Return false value
T_7.70 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_28, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196df40, 0, 9;
t_28 ;
    %load/v 8, v0x196e300_0, 32;
    %load/v 40, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.78, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.79;
T_7.78 ;
    %mov 72, 2, 1;
T_7.79 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e420_0, 32;
    %load/v 104, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.80, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.81;
T_7.80 ;
    %mov 104, 2, 1;
T_7.81 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.75, 8;
    %movi 9, 2, 2;
    %jmp/1  T_7.77, 8;
T_7.75 ; End of true expr.
    %jmp/0  T_7.76, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_7.77;
T_7.76 ;
    %mov 9, 1, 2; Return false value
T_7.77 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_29, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196dfc0, 0, 9;
t_29 ;
    %load/v 8, v0x196e1c0_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.85, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.86;
T_7.85 ;
    %mov 72, 2, 1;
T_7.86 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e260_0, 32;
    %load/v 72, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.87, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.88;
T_7.87 ;
    %mov 104, 2, 1;
T_7.88 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.82, 8;
    %mov 9, 0, 2;
    %jmp/1  T_7.84, 8;
T_7.82 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_7.83, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_7.84;
T_7.83 ;
    %mov 9, 11, 2; Return false value
T_7.84 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_30, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196e040, 0, 9;
t_30 ;
    %load/v 8, v0x196e300_0, 32;
    %load/v 72, v0x196de10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.92, 4;
    %load/x1p 72, v0x196de10_0, 1;
    %jmp T_7.93;
T_7.92 ;
    %mov 72, 2, 1;
T_7.93 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196e420_0, 32;
    %load/v 72, v0x196de10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_7.94, 4;
    %load/x1p 104, v0x196de10_0, 1;
    %jmp T_7.95;
T_7.94 ;
    %mov 104, 2, 1;
T_7.95 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_7.89, 8;
    %movi 9, 2, 2;
    %jmp/1  T_7.91, 8;
T_7.89 ; End of true expr.
    %jmp/0  T_7.90, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_7.91;
T_7.90 ;
    %mov 9, 1, 2; Return false value
T_7.91 ;
    %ix/getv 3, v0x196dce0_0;
    %jmp/1 t_31, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196e0c0, 0, 9;
t_31 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.23;
T_7.22 ;
    %load/v 8, v0x196dce0_0, 32;
    %cmpi/u 8, 64, 32;
    %jmp/0xz  T_7.96, 4;
    %load/v 8, v0x196e1c0_0, 32;
    %set/v v0x196d920_0, 8, 32;
    %load/v 8, v0x196e260_0, 32;
    %set/v v0x196d9a0_0, 8, 32;
    %load/v 8, v0x196e300_0, 32;
    %set/v v0x196da40_0, 8, 32;
    %load/v 8, v0x196e420_0, 32;
    %set/v v0x196dac0_0, 8, 32;
    %fork TD_viterbisim.viterbi.execute2.min, S_0x196d7b0;
    %join;
    %load/v  8, v0x196d8a0_0, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196e140_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.97;
T_7.96 ;
    %movi 8, 65, 32;
    %load/v 40, v0x196dce0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dce0_0, 32;
   %cmpi/u 9, 128, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_7.98, 8;
    %load/v 8, v0x196e140_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %load/v 9, v0x196e140_0, 2;
    %cmpi/u 9, 1, 2;
    %or 8, 4, 1;
    %jmp/0  T_7.100, 8;
    %mov 9, 0, 1;
    %jmp/1  T_7.102, 8;
T_7.100 ; End of true expr.
    %jmp/0  T_7.101, 8;
 ; End of false expr.
    %blend  9, 1, 1; Condition unknown.
    %jmp  T_7.102;
T_7.101 ;
    %mov 9, 1, 1; Return false value
T_7.102 ;
    %movi 10, 128, 32;
    %load/v 42, v0x196dce0_0, 32;
    %sub 10, 42, 32;
    %ix/get 1, 10, 32;
    %jmp/1 t_32, 4;
    %ix/load 0, 1, 0;
    %assign/v0/x1 v0x196dd60_0, 0, 9;
t_32 ;
    %load/v 8, v0x196e140_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %jmp/0  T_7.103, 8;
    %movi 11, 128, 32;
    %load/v 43, v0x196dce0_0, 32;
    %sub 11, 43, 32;
    %ix/get 3, 11, 32;
    %load/av 9, v0x196df40, 2;
    %jmp/1  T_7.105, 8;
T_7.103 ; End of true expr.
    %load/v 11, v0x196e140_0, 2;
    %cmpi/u 11, 1, 2;
    %mov 11, 4, 1;
    %jmp/0  T_7.106, 11;
    %movi 14, 128, 32;
    %load/v 46, v0x196dce0_0, 32;
    %sub 14, 46, 32;
    %ix/get 3, 14, 32;
    %load/av 12, v0x196dfc0, 2;
    %jmp/1  T_7.108, 11;
T_7.106 ; End of true expr.
    %load/v 14, v0x196e140_0, 2;
    %cmpi/u 14, 2, 2;
    %mov 14, 4, 1;
    %jmp/0  T_7.109, 14;
    %movi 17, 128, 32;
    %load/v 49, v0x196dce0_0, 32;
    %sub 17, 49, 32;
    %ix/get 3, 17, 32;
    %load/av 15, v0x196e040, 2;
    %jmp/1  T_7.111, 14;
T_7.109 ; End of true expr.
    %movi 19, 128, 32;
    %load/v 51, v0x196dce0_0, 32;
    %sub 19, 51, 32;
    %ix/get 3, 19, 32;
    %load/av 17, v0x196e0c0, 2;
    %jmp/0  T_7.110, 14;
 ; End of false expr.
    %blend  15, 17, 2; Condition unknown.
    %jmp  T_7.111;
T_7.110 ;
    %mov 15, 17, 2; Return false value
T_7.111 ;
    %jmp/0  T_7.107, 11;
 ; End of false expr.
    %blend  12, 15, 2; Condition unknown.
    %jmp  T_7.108;
T_7.107 ;
    %mov 12, 15, 2; Return false value
T_7.108 ;
    %jmp/0  T_7.104, 8;
 ; End of false expr.
    %blend  9, 12, 2; Condition unknown.
    %jmp  T_7.105;
T_7.104 ;
    %mov 9, 12, 2; Return false value
T_7.105 ;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196e140_0, 0, 9;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.99;
T_7.98 ;
    %movi 8, 129, 32;
    %load/v 40, v0x196dce0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196dce0_0, 32;
   %cmpi/u 9, 192, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_7.112, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e380_0, 0, 1;
    %load/v 8, v0x196dce0_0, 32;
    %subi 8, 129, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_7.114, 4;
    %load/x1p 8, v0x196dd60_0, 1;
    %jmp T_7.115;
T_7.114 ;
    %mov 8, 2, 1;
T_7.115 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x196dec0_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196dce0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 8;
    %jmp T_7.113;
T_7.112 ;
    %load/v 8, v0x196dce0_0, 32;
    %cmpi/u 8, 193, 32;
    %jmp/0xz  T_7.116, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e610_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196dce0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196e380_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e1c0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e260_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e300_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196e420_0, 0, 0;
T_7.116 ;
T_7.113 ;
T_7.99 ;
T_7.97 ;
T_7.23 ;
T_7.13 ;
T_7.7 ;
T_7.4 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_0x189fb80;
T_8 ;
    %wait E_0x1899570;
    %load/v 8, v0x196ca20_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_8.0, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d5a0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d310_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d0e0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d1f0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d290_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d3b0_0, 0, 0;
    %jmp T_8.1;
T_8.0 ;
    %load/v 8, v0x196d450_0, 1;
    %jmp/0xz  T_8.2, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d5a0_0, 0, 1;
T_8.2 ;
    %load/v 8, v0x196d450_0, 1;
    %load/v 9, v0x196d5a0_0, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_8.4, 8;
    %load/v 8, v0x196cac0_0, 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_8.6, 4;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.8, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.9;
T_8.8 ;
    %mov 72, 2, 1;
T_8.9 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d0e0_0, 0, 8;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.10, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.11;
T_8.10 ;
    %mov 72, 2, 1;
T_8.11 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d290_0, 0, 8;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_33, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cd90, 0, 0;
t_33 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_34, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cee0, 0, 0;
t_34 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.7;
T_8.6 ;
    %load/v 8, v0x196cac0_0, 32;
    %cmpi/u 8, 1, 32;
    %jmp/0xz  T_8.12, 4;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.14, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.15;
T_8.14 ;
    %mov 72, 2, 1;
T_8.15 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d0e0_0, 0, 8;
    %load/v 8, v0x196d290_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.16, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.17;
T_8.16 ;
    %mov 72, 2, 1;
T_8.17 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d1f0_0, 0, 8;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.18, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.19;
T_8.18 ;
    %mov 72, 2, 1;
T_8.19 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d290_0, 0, 8;
    %load/v 8, v0x196d290_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.20, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.21;
T_8.20 ;
    %mov 72, 2, 1;
T_8.21 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d3b0_0, 0, 8;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_35, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cd90, 0, 0;
t_35 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_36, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196ce10, 0, 8;
t_36 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_37, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cee0, 0, 0;
t_37 ;
    %movi 8, 2, 2;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_38, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cf60, 0, 8;
t_38 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.13;
T_8.12 ;
    %movi 8, 2, 32;
    %load/v 40, v0x196cac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196cac0_0, 32;
   %cmpi/u 9, 63, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_8.22, 8;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.27, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.28;
T_8.27 ;
    %mov 72, 2, 1;
T_8.28 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d1f0_0, 32;
    %load/v 104, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.29, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.30;
T_8.29 ;
    %mov 104, 2, 1;
T_8.30 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.24, 8;
    %load/v 9, v0x196d0e0_0, 32;
    %load/v 41, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.31, 4;
    %load/x1p 73, v0x196cc10_0, 1;
    %jmp T_8.32;
T_8.31 ;
    %mov 73, 2, 1;
T_8.32 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_8.26, 8;
T_8.24 ; End of true expr.
    %load/v 41, v0x196d1f0_0, 32;
    %load/v 105, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.33, 4;
    %load/x1p 105, v0x196cc10_0, 1;
    %jmp T_8.34;
T_8.33 ;
    %mov 105, 2, 1;
T_8.34 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_8.25, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_8.26;
T_8.25 ;
    %mov 9, 41, 32; Return false value
T_8.26 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d0e0_0, 0, 9;
    %load/v 8, v0x196d290_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.38, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.39;
T_8.38 ;
    %mov 72, 2, 1;
T_8.39 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d3b0_0, 32;
    %load/v 104, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.40, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.41;
T_8.40 ;
    %mov 104, 2, 1;
T_8.41 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.35, 8;
    %load/v 9, v0x196d290_0, 32;
    %load/v 41, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.42, 4;
    %load/x1p 73, v0x196cc10_0, 1;
    %jmp T_8.43;
T_8.42 ;
    %mov 73, 2, 1;
T_8.43 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_8.37, 8;
T_8.35 ; End of true expr.
    %load/v 41, v0x196d3b0_0, 32;
    %load/v 105, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.44, 4;
    %load/x1p 105, v0x196cc10_0, 1;
    %jmp T_8.45;
T_8.44 ;
    %mov 105, 2, 1;
T_8.45 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_8.36, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_8.37;
T_8.36 ;
    %mov 9, 41, 32; Return false value
T_8.37 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d1f0_0, 0, 9;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.49, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.50;
T_8.49 ;
    %mov 72, 2, 1;
T_8.50 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d1f0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.51, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.52;
T_8.51 ;
    %mov 104, 2, 1;
T_8.52 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.46, 8;
    %load/v 9, v0x196d0e0_0, 32;
    %load/v 73, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.53, 4;
    %load/x1p 73, v0x196cc10_0, 1;
    %jmp T_8.54;
T_8.53 ;
    %mov 73, 2, 1;
T_8.54 ;
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_8.48, 8;
T_8.46 ; End of true expr.
    %load/v 41, v0x196d1f0_0, 32;
    %load/v 73, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.55, 4;
    %load/x1p 105, v0x196cc10_0, 1;
    %jmp T_8.56;
T_8.55 ;
    %mov 105, 2, 1;
T_8.56 ;
    %mov 73, 105, 1; Move signal select into place
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_8.47, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_8.48;
T_8.47 ;
    %mov 9, 41, 32; Return false value
T_8.48 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d290_0, 0, 9;
    %load/v 8, v0x196d290_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.60, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.61;
T_8.60 ;
    %mov 72, 2, 1;
T_8.61 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d3b0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.62, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.63;
T_8.62 ;
    %mov 104, 2, 1;
T_8.63 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.57, 8;
    %load/v 9, v0x196d290_0, 32;
    %load/v 73, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=73 wid=1 in lookaside.
    %inv 73, 1;
    %mov 41, 73, 1;
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.64, 4;
    %load/x1p 73, v0x196cc10_0, 1;
    %jmp T_8.65;
T_8.64 ;
    %mov 73, 2, 1;
T_8.65 ;
    %mov 41, 73, 1; Move signal select into place
    %mov 42, 0, 31;
    %add 9, 41, 32;
    %jmp/1  T_8.59, 8;
T_8.57 ; End of true expr.
    %load/v 41, v0x196d3b0_0, 32;
    %load/v 73, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.66, 4;
    %load/x1p 105, v0x196cc10_0, 1;
    %jmp T_8.67;
T_8.66 ;
    %mov 105, 2, 1;
T_8.67 ;
; Save base=105 wid=1 in lookaside.
    %inv 105, 1;
    %mov 73, 105, 1;
    %mov 74, 0, 31;
    %add 41, 73, 32;
    %jmp/0  T_8.58, 8;
 ; End of false expr.
    %blend  9, 41, 32; Condition unknown.
    %jmp  T_8.59;
T_8.58 ;
    %mov 9, 41, 32; Return false value
T_8.59 ;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d3b0_0, 0, 9;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.71, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.72;
T_8.71 ;
    %mov 72, 2, 1;
T_8.72 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d1f0_0, 32;
    %load/v 104, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.73, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.74;
T_8.73 ;
    %mov 104, 2, 1;
T_8.74 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.68, 8;
    %mov 9, 0, 2;
    %jmp/1  T_8.70, 8;
T_8.68 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_8.69, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_8.70;
T_8.69 ;
    %mov 9, 11, 2; Return false value
T_8.70 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_39, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cd90, 0, 9;
t_39 ;
    %load/v 8, v0x196d290_0, 32;
    %load/v 40, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.78, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.79;
T_8.78 ;
    %mov 72, 2, 1;
T_8.79 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d3b0_0, 32;
    %load/v 104, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.80, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.81;
T_8.80 ;
    %mov 104, 2, 1;
T_8.81 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.75, 8;
    %movi 9, 2, 2;
    %jmp/1  T_8.77, 8;
T_8.75 ; End of true expr.
    %jmp/0  T_8.76, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_8.77;
T_8.76 ;
    %mov 9, 1, 2; Return false value
T_8.77 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_40, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196ce10, 0, 9;
t_40 ;
    %load/v 8, v0x196d0e0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.85, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.86;
T_8.85 ;
    %mov 72, 2, 1;
T_8.86 ;
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d1f0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.87, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.88;
T_8.87 ;
    %mov 104, 2, 1;
T_8.88 ;
    %mov 72, 104, 1; Move signal select into place
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.82, 8;
    %mov 9, 0, 2;
    %jmp/1  T_8.84, 8;
T_8.82 ; End of true expr.
    %movi 11, 1, 2;
    %jmp/0  T_8.83, 8;
 ; End of false expr.
    %blend  9, 11, 2; Condition unknown.
    %jmp  T_8.84;
T_8.83 ;
    %mov 9, 11, 2; Return false value
T_8.84 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_41, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cee0, 0, 9;
t_41 ;
    %load/v 8, v0x196d290_0, 32;
    %load/v 72, v0x196cc10_0, 1; Only need 1 of 2 bits
; Save base=72 wid=1 in lookaside.
    %inv 72, 1;
    %mov 40, 72, 1;
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.92, 4;
    %load/x1p 72, v0x196cc10_0, 1;
    %jmp T_8.93;
T_8.92 ;
    %mov 72, 2, 1;
T_8.93 ;
    %mov 40, 72, 1; Move signal select into place
    %mov 41, 0, 31;
    %add 8, 40, 32;
    %load/v 40, v0x196d3b0_0, 32;
    %load/v 72, v0x196cc10_0, 1; Select 1 out of 2 bits
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.94, 4;
    %load/x1p 104, v0x196cc10_0, 1;
    %jmp T_8.95;
T_8.94 ;
    %mov 104, 2, 1;
T_8.95 ;
; Save base=104 wid=1 in lookaside.
    %inv 104, 1;
    %mov 72, 104, 1;
    %mov 73, 0, 31;
    %add 40, 72, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 5, 1;
    %jmp/0  T_8.89, 8;
    %movi 9, 2, 2;
    %jmp/1  T_8.91, 8;
T_8.89 ; End of true expr.
    %jmp/0  T_8.90, 8;
 ; End of false expr.
    %blend  9, 1, 2; Condition unknown.
    %jmp  T_8.91;
T_8.90 ;
    %mov 9, 1, 2; Return false value
T_8.91 ;
    %ix/getv 3, v0x196cac0_0;
    %jmp/1 t_42, 4;
    %ix/load 0, 2, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x196cf60, 0, 9;
t_42 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.23;
T_8.22 ;
    %load/v 8, v0x196cac0_0, 32;
    %cmpi/u 8, 64, 32;
    %jmp/0xz  T_8.96, 4;
    %load/v 8, v0x196d0e0_0, 32;
    %set/v v0x196c6d0_0, 8, 32;
    %load/v 8, v0x196d1f0_0, 32;
    %set/v v0x196c770_0, 8, 32;
    %load/v 8, v0x196d290_0, 32;
    %set/v v0x196c810_0, 8, 32;
    %load/v 8, v0x196d3b0_0, 32;
    %set/v v0x196c8c0_0, 8, 32;
    %fork TD_viterbisim.viterbi.execute3.min, S_0x1922940;
    %join;
    %load/v  8, v0x18994c0_0, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196d040_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.97;
T_8.96 ;
    %movi 8, 65, 32;
    %load/v 40, v0x196cac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196cac0_0, 32;
   %cmpi/u 9, 128, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_8.98, 8;
    %load/v 8, v0x196d040_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %load/v 9, v0x196d040_0, 2;
    %cmpi/u 9, 1, 2;
    %or 8, 4, 1;
    %jmp/0  T_8.100, 8;
    %mov 9, 0, 1;
    %jmp/1  T_8.102, 8;
T_8.100 ; End of true expr.
    %jmp/0  T_8.101, 8;
 ; End of false expr.
    %blend  9, 1, 1; Condition unknown.
    %jmp  T_8.102;
T_8.101 ;
    %mov 9, 1, 1; Return false value
T_8.102 ;
    %movi 10, 128, 32;
    %load/v 42, v0x196cac0_0, 32;
    %sub 10, 42, 32;
    %ix/get 1, 10, 32;
    %jmp/1 t_43, 4;
    %ix/load 0, 1, 0;
    %assign/v0/x1 v0x196cb60_0, 0, 9;
t_43 ;
    %load/v 8, v0x196d040_0, 2;
    %cmpi/u 8, 0, 2;
    %mov 8, 4, 1;
    %jmp/0  T_8.103, 8;
    %movi 11, 128, 32;
    %load/v 43, v0x196cac0_0, 32;
    %sub 11, 43, 32;
    %ix/get 3, 11, 32;
    %load/av 9, v0x196cd90, 2;
    %jmp/1  T_8.105, 8;
T_8.103 ; End of true expr.
    %load/v 11, v0x196d040_0, 2;
    %cmpi/u 11, 1, 2;
    %mov 11, 4, 1;
    %jmp/0  T_8.106, 11;
    %movi 14, 128, 32;
    %load/v 46, v0x196cac0_0, 32;
    %sub 14, 46, 32;
    %ix/get 3, 14, 32;
    %load/av 12, v0x196ce10, 2;
    %jmp/1  T_8.108, 11;
T_8.106 ; End of true expr.
    %load/v 14, v0x196d040_0, 2;
    %cmpi/u 14, 2, 2;
    %mov 14, 4, 1;
    %jmp/0  T_8.109, 14;
    %movi 17, 128, 32;
    %load/v 49, v0x196cac0_0, 32;
    %sub 17, 49, 32;
    %ix/get 3, 17, 32;
    %load/av 15, v0x196cee0, 2;
    %jmp/1  T_8.111, 14;
T_8.109 ; End of true expr.
    %movi 19, 128, 32;
    %load/v 51, v0x196cac0_0, 32;
    %sub 19, 51, 32;
    %ix/get 3, 19, 32;
    %load/av 17, v0x196cf60, 2;
    %jmp/0  T_8.110, 14;
 ; End of false expr.
    %blend  15, 17, 2; Condition unknown.
    %jmp  T_8.111;
T_8.110 ;
    %mov 15, 17, 2; Return false value
T_8.111 ;
    %jmp/0  T_8.107, 11;
 ; End of false expr.
    %blend  12, 15, 2; Condition unknown.
    %jmp  T_8.108;
T_8.107 ;
    %mov 12, 15, 2; Return false value
T_8.108 ;
    %jmp/0  T_8.104, 8;
 ; End of false expr.
    %blend  9, 12, 2; Condition unknown.
    %jmp  T_8.105;
T_8.104 ;
    %mov 9, 12, 2; Return false value
T_8.105 ;
    %ix/load 0, 2, 0;
    %assign/v0 v0x196d040_0, 0, 9;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.99;
T_8.98 ;
    %movi 8, 129, 32;
    %load/v 40, v0x196cac0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x196cac0_0, 32;
   %cmpi/u 9, 192, 32;
    %or 5, 4, 1;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_8.112, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d310_0, 0, 1;
    %load/v 8, v0x196cac0_0, 32;
    %subi 8, 129, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_8.114, 4;
    %load/x1p 8, v0x196cb60_0, 1;
    %jmp T_8.115;
T_8.114 ;
    %mov 8, 2, 1;
T_8.115 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x196ccb0_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x196cac0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 8;
    %jmp T_8.113;
T_8.112 ;
    %load/v 8, v0x196cac0_0, 32;
    %cmpi/u 8, 193, 32;
    %jmp/0xz  T_8.116, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d5a0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196cac0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x196d310_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d0e0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d1f0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d290_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x196d3b0_0, 0, 0;
T_8.116 ;
T_8.113 ;
T_8.99 ;
T_8.97 ;
T_8.23 ;
T_8.13 ;
T_8.7 ;
T_8.4 ;
T_8.1 ;
    %jmp T_8;
    .thread T_8;
    .scope S_0x18dba40;
T_9 ;
    %wait E_0x1899570;
    %load/v 8, v0x1970950_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_9.0, 4;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1972880_0, 0, 0;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1972150_0, 0, 0;
    %jmp T_9.1;
T_9.0 ;
    %load/v 8, v0x1972680_0, 1;
    %jmp/0xz  T_9.2, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1972150_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1972150_0, 0, 8;
T_9.2 ;
    %load/v 8, v0x1972150_0, 6;
    %cmpi/u 8, 63, 6;
    %jmp/0xz  T_9.4, 4;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1972880_0, 2;
    %ix/load 0, 2, 0;
    %assign/v0 v0x1972880_0, 0, 8;
T_9.4 ;
T_9.1 ;
    %jmp T_9;
    .thread T_9;
    .scope S_0x189dc00;
T_10 ;
    %vpi_call 2 13 "$dumpfile", "viterbi.vcd";
    %vpi_call 2 14 "$dumpvars", 1'sb0, S_0x189dc00;
    %ix/load 0, 1, 0;
    %assign/v0 v0x19735e0_0, 0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973660_0, 0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1976680_0, 0, 0;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973660_0, 0, 0;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1973660_0, 0, 1;
    %set/v v0x1976160_0, 0, 32;
T_10.0 ;
    %load/v 8, v0x1976160_0, 32;
   %cmpi/s 8, 64, 32;
    %jmp/0xz T_10.1, 5;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1976680_0, 0, 1;
    %ix/getv/s 1, v0x1976160_0;
    %jmp/1 T_10.2, 4;
    %load/x1p 8, v0x19760e0_0, 1;
    %jmp T_10.3;
T_10.2 ;
    %mov 8, 2, 1;
T_10.3 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %assign/v0 v0x1975ff0_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x1976160_0, 32;
    %set/v v0x1976160_0, 8, 32;
    %jmp T_10.0;
T_10.1 ;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1976680_0, 0, 0;
    %vpi_call 2 29 "$write", "send\011";
    %set/v v0x1976160_0, 0, 32;
T_10.4 ;
    %load/v 8, v0x1976160_0, 32;
   %cmpi/s 8, 64, 32;
    %jmp/0xz T_10.5, 5;
    %vpi_call 2 31 "$write", "%b", &PV<v0x19760e0_0, v0x1976160_0, 1>;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x1976160_0, 32;
    %set/v v0x1976160_0, 8, 32;
    %jmp T_10.4;
T_10.5 ;
    %vpi_call 2 33 "$write", "\012";
    %vpi_call 2 35 "$write", "receive\011";
    %set/v v0x1976160_0, 0, 32;
    %set/v v0x19763a0_0, 0, 32;
T_10.6 ;
    %load/v 8, v0x1976160_0, 32;
   %cmpi/s 8, 64, 32;
    %jmp/0xz T_10.7, 5;
    %delay 10, 0;
    %load/v 8, v0x19761e0_0, 1;
    %jmp/0xz  T_10.8, 8;
    %vpi_call 2 41 "$write", "%b", v0x1975ec0_0;
    %load/v 8, v0x1975ec0_0, 1;
    %ix/getv/s 1, v0x1976160_0;
    %jmp/1 T_10.10, 4;
    %load/x1p 9, v0x19760e0_0, 1;
    %jmp T_10.11;
T_10.10 ;
    %mov 9, 2, 1;
T_10.11 ;
; Save base=9 wid=1 in lookaside.
    %cmp/u 8, 9, 1;
    %inv 4, 1;
    %jmp/0xz  T_10.12, 4;
    %load/v 8, v0x19763a0_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x19763a0_0, 8, 32;
T_10.12 ;
    %load/v 8, v0x1976160_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x1976160_0, 8, 32;
T_10.8 ;
    %jmp T_10.6;
T_10.7 ;
    %vpi_call 2 46 "$write", "\012";
    %vpi_call 2 48 "$write", "error\011%1d\012", v0x19763a0_0;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1976680_0, 0, 0;
    %delay 10000, 0;
    %vpi_call 2 52 "$finish";
    %end;
    .thread T_10;
    .scope S_0x189dc00;
T_11 ;
    %delay 5, 0;
    %load/v 8, v0x19735e0_0, 1;
    %inv 8, 1;
    %set/v v0x19735e0_0, 8, 1;
    %jmp T_11;
    .thread T_11;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "viterbisim.v";
    "convolution.v";
    "viterbi.v";
